{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Counter.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/TranscendingSelf.js","Sandbox/Ideas.js","Sandbox/Timer.js","Sandbox/Affirmation.js","Sandbox/SelfEnquiry.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Playground.js","Tarot/tarot.jsx","Tarot/Tarot.js","Sandbox/Goals.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","Sandbox/Footer.js","Sandbox/Dreams.js","Sandbox/WhatEats.js","Sandbox/Art.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Counter","stuffDone","total","Date","parse","checkboxesCrossed","itemsDone","length","document","getElementById","checked","push","a","day","getTimeRemaining","docRef","doc","db","toString","payload","PM","done","timestamp","serverTimestamp","setDoc","getDoc","docSnapshot","i","JSON","stringify","undefined","innerHTML","navigator","clipboard","writeText","task","includes","offset","daySelected","get10DayAvg","copyToClipboard","get10DayDone","getDayNumber","getStatus","title","setInterval","date","Notepad","placeholder","dbName","handleNew","handleChange","event","moment","idea","hide","toDoItem","addDayNote","note","updateDoc","dayNote","getDayNote","contenteditable","autocomplete","getText","setDatabaseName","name","for","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","hideDoneItem","open","item","Motivation","EjaculationTimer","axios","get","then","response","time","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","incrementSeconds","TranscendingSelf","lesson","setData","collectionRef","q","snapshot","getWeekNumber","URL","Title","task1","task2","task3","task4","Ideas","hideIdea","fontSize","Timer","renderTime","remainingTime","isPlaying","colors","colorsTime","onComplete","shouldRepeat","delay","getAffirmation","Affirmation","List","getList","affirmations","AffirmationInput","arrayUnion","sort","randomNum2","randomAffirmation","repeat","width","direction","height","scrollamount","getAffirmations","getRandomAffirmations","saveAffirmation","SelfEnquiry","alert","doSomething","Remember","addDayToFirebase","items","updateDayInFirebase","isDone","handleCheck","getItemsDone","VisionBoard","visionBoard","alt","Playground","Tarot","cards","starred","setStarred","mode","getOldCard","setOldCard","getNewCard","setNewCard","currentTheme","setCurrentTheme","newCard","getStarred","cardInfo","card","cardOld","meaning","oldStyle","cardSearch","match","join","nameParser","market","saveColor","body","list","isStarred","addStarred","pic","saveButton","contentEditable","fontWeight","editMeaning","FormControl","as","tarot","selectedTheme","index","Goals","Sandbox","Contact","password","authorized","authorize","auth","shrek","display","login","removeSpinner","Clock","toLocaleTimeString","Footer","randomColor","to","Dreams","Keywords","randomKeyword","saveKeyword","keyword","timeNow","payload2","count","dates","docRef2","incrementCount","currentCount","WhatEats","Art","files","file","createObjectURL","method","form","fileInput","addEventListener","submit","window","clipboardData","App","Helmet","content","path","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4c5351f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          style={{'backgroundColor': colorName}}\n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import db from './firebase';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\n\nexport class Counter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { stuffDone: [] };\n      }\n      \n    getTimeRemaining(){\n        const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n        // console.log('NEW DATE IS: ' + new Date());\n        // console.log('Time left lol: ' + total/(1000*60*60*24));\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n\n    checkboxesCrossed() {\n        let checkboxesCrossed = 0;\n        let itemsDone = this.itemsDone();\n            \n        checkboxesCrossed = itemsDone.length;\n\n        return checkboxesCrossed;\n    }\n\n    itemsDone() {\n        let itemsDone = [];\n\n        if(document.getElementById('Obsidian') !== null) {\n            let idk;\n            idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n            idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n            idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n            idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n            idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n            idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n            idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n            idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('SelfInquiry') : null;\n            idk = document.getElementById('Writing').checked ? itemsDone.push('Writing') : null;\n            idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n        }\n        return itemsDone;\n    }\n\n    async addDayToFirebase() {\n        const day = this.getTimeRemaining();\n        const docRef = doc(db, 'Days', `#${day.toString()}`);\n        let payload;\n\n        payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n    \n        await setDoc(docRef, payload);\n      }\n\n\n    async getItemsDone() {\n        const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        console.log(data.done)\n        return data.done;\n    }\n\n    async get10DayAvg() {\n        let total = 0;\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                total += data.PM;\n            }\n        }\n        console.log(`Total: ${total}`)\n        document.getElementById('lol').innerHTML = total/10;\n        return '4';\n    }\n\n    async get10DayDone() {\n        let stuffDone = [];\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                stuffDone.push(data.done);\n            } else {\n                stuffDone.push([]);\n            }\n        }\n        console.log(`StuffDone: ${JSON.stringify(stuffDone)}`)\n        this.setState({stuffDone: stuffDone})\n        return '4';\n    }\n\n\n\n    copyToClipboard() {\n        navigator.clipboard.writeText('\\n**Day #' + this.getTimeRemaining() + '**\\n\\n\\n---\\n\\n');\n    }\n\n    fillValues() {\n        for(let i = 0; i < 10; i++) {\n            return <td>❌</td>\n        }\n    }\n\n    getStatus(task, day) {\n        // console.log('Stuff done is: ' + this.state.stuffDone)\n        if(this.state.stuffDone[day] === undefined) {\n            return '⬜'\n        }\n        if(this.state.stuffDone[day].toString().includes(task)) {\n            return '✅';\n        } else {\n            if(day == 0){\n                return '⬜';\n            } else {\n                return '❌';\n            }\n        }\n    }\n\n    getDayNumber(offset) {\n        const day = this.getTimeRemaining() + offset;\n        let daySelected;;\n        if(document.getElementById('DayNum') !== null){\n            daySelected = document.getElementById('DayNum').innerHTML;\n        }\n        if (daySelected === day.toString()) {\n            return <u><b><i>{day}</i></b></u>;\n        } else {\n            return day;\n        }\n    }\n\n    render() {\n        return (\n            <div> \n                <details  id=\"TableDiv\" onClick={() => { this.get10DayAvg(); this.copyToClipboard(); this.get10DayDone() }}>\n                    <summary>⏳Day #<u id=\"DayNum\">{ this.getTimeRemaining()}</u> | PM: {this.checkboxesCrossed()}/10 ▼</summary>\n                    10 day avg: <b id='lol'>calculating...</b> <br/><br/>\n\n                    <table  id=\"table\">\n                        <tr>\n                            <th></th>\n                            <th>{ this.getDayNumber(9) }</th>\n                            <th>{ this.getDayNumber(8) }</th>\n                            <th>{ this.getDayNumber(7) }</th>\n                            <th>{ this.getDayNumber(6) }</th>\n                            <th>{ this.getDayNumber(5) }</th>\n                            <th>{ this.getDayNumber(4) }</th>\n                            <th>{ this.getDayNumber(3) }</th>\n                            <th>{ this.getDayNumber(2) }</th>\n                            <th>{ this.getDayNumber(1) }</th>\n                            <th>{ this.getDayNumber(0) }</th>\n                        </tr>\n                        <tr>\n                            <td>Codecademy</td>\n                            <td>{this.getStatus('Codecademy', 9)}</td>\n                            <td>{this.getStatus('Codecademy', 8)}</td>\n                            <td>{this.getStatus('Codecademy', 7)}</td>\n                            <td>{this.getStatus('Codecademy', 6)}</td>\n                            <td>{this.getStatus('Codecademy', 5)}</td>\n                            <td>{this.getStatus('Codecademy', 4)}</td>\n                            <td>{this.getStatus('Codecademy', 3)}</td>\n                            <td>{this.getStatus('Codecademy', 2)}</td>\n                            <td>{this.getStatus('Codecademy', 1)}</td>\n                            <td>{this.getStatus('Codecademy', 0)}</td>\n\n                        </tr>\n                            <tr>\n                            <td>SDS</td>\n                            <td>{this.getStatus('SDS', 9)}</td>\n                            <td>{this.getStatus('SDS', 8)}</td>\n                            <td>{this.getStatus('SDS', 7)}</td>\n                            <td>{this.getStatus('SDS', 6)}</td>\n                            <td>{this.getStatus('SDS', 5)}</td>\n                            <td>{this.getStatus('SDS', 4)}</td>\n                            <td>{this.getStatus('SDS', 3)}</td>\n                            <td>{this.getStatus('SDS', 2)}</td>\n                            <td>{this.getStatus('SDS', 1)}</td>\n                            <td>{this.getStatus('SDS', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Sport</td>\n                            <td>{this.getStatus('Sport', 9)}</td>\n                            <td>{this.getStatus('Sport', 8)}</td>\n                            <td>{this.getStatus('Sport', 7)}</td>\n                            <td>{this.getStatus('Sport', 6)}</td>\n                            <td>{this.getStatus('Sport', 5)}</td>\n                            <td>{this.getStatus('Sport', 4)}</td>\n                            <td>{this.getStatus('Sport', 3)}</td>\n                            <td>{this.getStatus('Sport', 2)}</td>\n                            <td>{this.getStatus('Sport', 1)}</td>\n                            <td>{this.getStatus('Sport', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Obsidian</td>\n                            <td>{this.getStatus('Obsidian', 9)}</td>\n                            <td>{this.getStatus('Obsidian', 8)}</td>\n                            <td>{this.getStatus('Obsidian', 7)}</td>\n                            <td>{this.getStatus('Obsidian', 6)}</td>\n                            <td>{this.getStatus('Obsidian', 5)}</td>\n                            <td>{this.getStatus('Obsidian', 4)}</td>\n                            <td>{this.getStatus('Obsidian', 3)}</td>\n                            <td>{this.getStatus('Obsidian', 2)}</td>\n                            <td>{this.getStatus('Obsidian', 1)}</td>\n                            <td>{this.getStatus('Obsidian', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Read</td>\n                            <td>{this.getStatus('Read', 9)}</td>\n                            <td>{this.getStatus('Read', 8)}</td>\n                            <td>{this.getStatus('Read', 7)}</td>\n                            <td>{this.getStatus('Read', 6)}</td>\n                            <td>{this.getStatus('Read', 5)}</td>\n                            <td>{this.getStatus('Read', 4)}</td>\n                            <td>{this.getStatus('Read', 3)}</td>\n                            <td>{this.getStatus('Read', 2)}</td>\n                            <td>{this.getStatus('Read', 1)}</td>\n                            <td>{this.getStatus('Read', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Anki</td>\n                            <td>{this.getStatus('Anki', 9)}</td>\n                            <td>{this.getStatus('Anki', 8)}</td>\n                            <td>{this.getStatus('Anki', 7)}</td>\n                            <td>{this.getStatus('Anki', 6)}</td>\n                            <td>{this.getStatus('Anki', 5)}</td>\n                            <td>{this.getStatus('Anki', 4)}</td>\n                            <td>{this.getStatus('Anki', 3)}</td>\n                            <td>{this.getStatus('Anki', 2)}</td>\n                            <td>{this.getStatus('Anki', 1)}</td>\n                            <td>{this.getStatus('Anki', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Affirmation</td>\n                            <td>{this.getStatus('Affirmation', 9)}</td>\n                            <td>{this.getStatus('Affirmation', 8)}</td>\n                            <td>{this.getStatus('Affirmation', 7)}</td>\n                            <td>{this.getStatus('Affirmation', 6)}</td>\n                            <td>{this.getStatus('Affirmation', 5)}</td>\n                            <td>{this.getStatus('Affirmation', 4)}</td>\n                            <td>{this.getStatus('Affirmation', 3)}</td>\n                            <td>{this.getStatus('Affirmation', 2)}</td>\n                            <td>{this.getStatus('Affirmation', 1)}</td>\n                            <td>{this.getStatus('Affirmation', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Self-enquiry</td>\n                            <td>{this.getStatus('Self-Inquiry', 9)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 8)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 7)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 6)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 5)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 4)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 3)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 2)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 1)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td><abbr title=\"One truthful sentence?\">Writing</abbr></td>\n                            <td>{this.getStatus('Writing', 9)}</td>\n                            <td>{this.getStatus('Writing', 8)}</td>\n                            <td>{this.getStatus('Writing', 7)}</td>\n                            <td>{this.getStatus('Writing', 6)}</td>\n                            <td>{this.getStatus('Writing', 5)}</td>\n                            <td>{this.getStatus('Writing', 4)}</td>\n                            <td>{this.getStatus('Writing', 3)}</td>\n                            <td>{this.getStatus('Writing', 2)}</td>\n                            <td>{this.getStatus('Writing', 1)}</td>\n                            <td>{this.getStatus('Writing', 0)}</td>\n                        </tr>\n                            <tr>\n                                <td>Contemplation</td>\n                                <td>{this.getStatus('Contemplation', 9)}</td>\n                                <td>{this.getStatus('Contemplation', 8)}</td>\n                                <td>{this.getStatus('Contemplation', 7)}</td>\n                                <td>{this.getStatus('Contemplation', 6)}</td>\n                                <td>{this.getStatus('Contemplation', 5)}</td>\n                                <td>{this.getStatus('Contemplation', 4)}</td>\n                                <td>{this.getStatus('Contemplation', 3)}</td>\n                                <td>{this.getStatus('Contemplation', 2)}</td>\n                                <td>{this.getStatus('Contemplation', 1)}</td>\n                                <td>{this.getStatus('Contemplation', 0)}</td>\n                            </tr>\n                    </table>\n                {/* <button>←</button>\n                <button>→</button> */}\n                </details>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // Paste your code here.\n        const oneSecond = 1000;\n        setInterval(() => {\n        this.setState({ date: new Date() });\n        }, oneSecond);\n    }\n}\n","import { collection, onSnapshot, getDoc, setDoc, doc, serverTimestamp, updateDoc } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {placeholder: 'Any ideas or To-dos?', text: ' ', dbName: \"ideas\", day: 0};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.placeholder;\n  }\n\n  handleChange(event) {    \n    this.setState({text: event.target.value});\n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    switch(dbName) {\n      case \"ideas\":\n        payload = {idea: this.state.text, timestamp: serverTimestamp(), hide: 0};\n        await setDoc(docRef, payload);\n        break;\n      case \"toDo\":\n        payload = {toDoItem: this.state.text, done: 0, timestamp: serverTimestamp()};\n        await setDoc(docRef, payload);\n        break;\n      case 'dayNote':\n        this.addDayNote();\n        break;\n    }\n    this.setState({text: ''});\n    this.setState({placeholder: 'Saved! Anything else?'});\n    \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n    this.setState({text: ''}); \n    this.setState({placeholder: `saving to: ${event.target.value}`}); \n\n    // document.querySelector('#notepad').value = \"\";\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async addDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    let payload;\n\n    payload = {note: this.state.text, timestamp: serverTimestamp()};\n    \n    await updateDoc(docRef, payload);\n  }\n\n  async getDayNote(day) {\n    document.getElementById('DayNum').innerHTML = this.getTimeRemaining()+day;\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()+day}`);\n    console.log('Daily note from Day #' + (this.getTimeRemaining()+day));\n    // console.log('Type is' + typeof (this.getTimeRemaining()+day));\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    let dayNote;\n    if(data !== undefined) {\n      dayNote = data.note;\n    }\n\n    console.log('Day note is: ' + dayNote);\n    dayNote = dayNote === undefined ? '🤔' : dayNote;\n\n    this.setState({placeholder: ''});\n    this.setState({text: dayNote});\n    document.querySelector('#notepad').value = dayNote;\n    // document.querySelector(\"//th[contains(.,'8496')]\").innerHtml = 'Nice';\n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <button onClick={() => {this.getDayNote(this.state.day + 1);this.setState({ day: this.state.day + 1}) }}>←</button>\n        <button onClick={() => {this.getDayNote(this.state.day - 1);this.setState({ day: this.state.day - 1}) }}>→</button><br />\n        {/* {this.getTimeRemaining()+this.state.day} */}\n\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> \n        \n        <input type='radio'></input> \n        <input type='radio'></input>\n        \n        <br />\n\n\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n{/* \n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label> */}\n\n            <input onClick={() => this.getDayNote(0)} type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"dayNote\"/>\n            <label for=\"starred\">📝</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1, hide: 0};\n\n    setDoc(docRef, payload);\n  }\n\n  const hideDoneItem = async (toDoItem) => {\n    console.log(toDoItem.id)\n    const docRef = doc(db, \"toDo\", toDoItem.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='toDoList'>\n      <details open>\n      <summary><h2>✅ <b><u>To-do list:</u></b></h2></summary>\n\n        {\n          toDos.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n          ))\n        } \n        \n        </details>\n        \n        <br />\n\n      <details>\n        <summary>Done ▼</summary>\n        {\n          done.map(item => (\n            item.hide == 1 ? null : <div><input type=\"checkbox\" checked/> { item.toDoItem } <button onClick={() => hideDoneItem(item)}>×</button> </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n                <details>\n                  <summary>Important ▼</summary>\n                  What can I do today to 📈 my self-esteem?\n                  <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n                  <br/>\n                  ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n                </details> <br />\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n    getWeekNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log(days)\n        return days\n    }\n    getDayNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #{this.getWeekNumber()}</h3>\n            <h3>Day {this.getDayNumber()}</h3>\n            <button onClick={ () => this.getWeekNumber() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\n\nexport default function TranscendingSelf() {\n\n    const [data, setData] = useState([{ lesson: \"Loading...\", id: \"initial\"}]);\n\n    const collectionRef = collection(db, \"Transcending Self\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n    []\n    );\n\n    const getWeekNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor(1 + (total/(1000*60*60*24*7)) );\n        // console.log('days is: ' + total/1000/60/60/24/7)\n        console.log(days)\n        return days\n    }\n    const getDayNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        let days = Math.floor( total/(1000*60*60*24) % 7 );\n        \n        days = days === 0 ? 7 : days;\n        return days\n    }\n    // const parseData = () => {\n    //     const data = JSON.parse(data);\n    //     return data.id\n    // }\n    const printTask = () =>{\n        console.log()\n    }\n\n    const getWeekLesson = async () => {\n        // const docRef = doc(db, 'Transcending Self', `Week #${getWeekNumber()}`);\n        const docRef = doc(db, 'Transcending Self', `Lesson`);\n        const docSnapshot = await getDoc(docRef)\n        // const data = docSnapshot.data();\n        const data = await docSnapshot.data();\n        // console.log('data is: ' + JSON.stringify(data))\n        console.log('data is: ' + JSON.stringify(data))\n        setData({lesson: 'idk'})\n        // return data.id;\n        return JSON.stringify(data.Title)\n    }\n\n    const getURL = () => { \n        const URL = \"https://drive.google.com/file/d/0ByAPpaltspWtVEZxN2JhRzJBNjA/view?mc_cid=97ff99288b&mc_eid=1f0a85948e&resourcekey=0-4cPU3xdjsbluhjrTDiYd3w\";\n        console.log('TS data is' + JSON.stringify(data))\n        return URL\n    }\n\n  return (\n    <div id='TranscendingSelf' style={{'border' : '1px solid white'}}>\n        <h3>Week #{getWeekNumber()}: <a href={data[0].URL} target=\"_blank\">     {data[0].Title}     </a> </h3> \n\n        {/* <details>\n            <summary><b><u>Day {getDayNumber()}:</u></b></summary>\n            <h1>{JSON.stringify(data)}</h1>\n            <button onClick={ () => getWeekLesson() }>Console log</button>\n        </details> */}\n\n        {/* {data.map(item => (<h2>{item[`Day #${getDayNumber()}`]}</h2> ))} */}\n        <b>WEEK'S WORK:</b> <br />\n        1. {data[0].task1} <br/><br/>\n        2. {data[0].task2} <br/><br/>\n        3. {data[0].task3} <br/><br/>\n        4. {data[0].task4} <br/><br/>\n\n        5. Do your writing assignment.\n\n        {/* 2. See if you can recognize how your self is as defined by what it's not as it is by what it\nis.<br /><br />\n\n        3. From time to time, dwell on the fact that you do not seem to be the creator of reality --\nor even of your own existence -- and how this influences your experience of yourself,\nyour capacity, and your relationship to life (other). */}\n            <br /><br />\n\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\", hide: 0 }]);\n\n    const collectionRef = collection(db, \"ideas\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n      []\n    );\n\n  const hideIdea = async (idea) => {\n    console.log(idea)\n    const docRef = doc(db, \"ideas\", idea.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='Ideas'>\n      < br />\n      <details open>\n        <summary><b style={{fontSize : '2em'}}>💡<u> ideas:</u></b></summary>\n            {\n            data.map(item => (\n                item.hide == 0 ? <h3>{item.idea} <button onClick={() => hideIdea(item)}>×</button></h3> : null\n            ))\n        }\n      </details>\n\n\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nexport class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    // console.log('NEW DATE IS: ' + new Date());\n    // console.log('Time left lol: ' + total/(1000*60*60*24));\n    // const days = Math.floor( total/(1000*60*60*24) );\n    }\n\n    renderTime = ({ remainingTime }) => {\n        if (remainingTime === 0) {\n        return <div className=\"timer\">Too lale...</div>;\n        }\n    \n        return (\n        <div className=\"timer\">\n            <div className=\"text\">Remaining</div>\n            <div className=\"value\">{remainingTime}</div>\n            <div className=\"text\">seconds</div>\n        </div>\n        );\n    };\n\n    getAffirmation() {\n        return <div>Я силён</div>\n    }\n\n  render() {\n    return <div id=\"affirmationTimer\">\n            {/* <button>Start</button> 5:00<br/>{this.state.date.toLocaleTimeString()} */}\n            <CountdownCircleTimer\n                isPlaying\n                duration={300}\n                colors={[\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"]}\n                colorsTime={[10, 6, 3, 0]}\n                onComplete={() => ({ shouldRepeat: false, delay: 1 })}\n            >\n                {/* {renderTime} */}\n            { this.getAffirmation() }\n            </CountdownCircleTimer>\n        </div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport { Timer } from './Timer';\nimport db from './firebase';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\n\nexport class Affirmation extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { \n          List: ['fuck!'],\n        };\n\n        this.getList = this.getList.bind(this);\n        this.setState( {List: this.getList()})\n\n      }\n\n    async getList() {\n        const docRef = doc(db, 'Affirmation', 'Affirmations')\n\n        const docSnapshot = await getDoc(docRef)\n        const affirmations = docSnapshot.data();\n        console.log('Get list is: ' + JSON.stringify(affirmations.List))\n\n        this.setState( {List: affirmations.List})\n        return affirmations.List;\n    }\n\n    async saveAffirmation(e) {\n        e.preventDefault();\n\n        const AffirmationInput = document.querySelector('#AffirmationInput').value;\n        console.log(AffirmationInput)\n\n        const docRef = doc(db, 'Affirmation', 'Affirmations')\n        let payload = {List: arrayUnion(AffirmationInput )};\n        await updateDoc(docRef, payload)\n\n        document.querySelector('#AffirmationInput').value = '';\n        document.querySelector('#AffirmationInput').placeholder = 'Saved! Any more?';\n    }\n\n    getAffirmations() {\n        const affirmations = this.state.List;\n        affirmations.sort( () => .5 - Math.random() );\n        return affirmations.toString();\n    }\n\n    getRandomAffirmations() {\n        const affirmations = this.state.List;\n        const length = affirmations.length\n        const randomNum = Math.floor(Math.random() * length)\n        const randomNum2 = Math.floor(Math.random() * length) + 1\n\n        const randomAffirmation = affirmations[randomNum] + ', '\n\n        console.log(randomAffirmation.repeat(randomNum2))\n        return randomAffirmation.repeat(randomNum2)\n    }\n\n\n  render() {\n    return (\n        <div id=\"Affirmation\">\n          <marquee width=\"60%\" direction=\"left\" height=\"40px\" scrollamount=\"18\">\n                {this.getAffirmations()}\n                {this.getRandomAffirmations()}\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                  \n                Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n                Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n                Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n\n                Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n                Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n                Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n\n                I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. \n                I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. \n\n\n                I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n                I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n                I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n\n                Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. \n                Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. \n            </marquee>  \n            <Timer />\n\n            <form onSubmit={(e) => this.saveAffirmation(e)}>\n                <input type='text' id='AffirmationInput'></input>\n                <button onClick={(e) => this.saveAffirmation(e)}>save</button>\n            </form>\n\n            <button onClick={() => this.getRandomAffirmations()}>Get Random</button>\n        </div>\n    );\n  }\n\n  componentDidMount() {\n      this.getList();\n    // this.setState( {List: this.getList()})\n  }\n}\n","import React from 'react';\n\nexport class SelfEnquiry extends React.Component {\n    doSomething(e) {\n        alert('yeah well, but who is aware of ' + document.getElementById('WhoIamInput').value)\n        e.preventDefault();\n    }\n\n  render() {\n    return (\n        <div id=\"selfEnquiry\">\n            <form onSubmit={(e) => this.doSomething(e)}>\n                Who am I? What am I? <br/>\n                <input type=\"text\" id=\"WhoIamInput\"></input> <br/>            \n            </form>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase';\nimport { TS } from './TS';\nimport TranscendingSelf from './TranscendingSelf';\nimport Ideas from './Ideas';\nimport { Affirmation } from './Affirmation';\nimport { SelfEnquiry } from './SelfEnquiry'\n\n\nexport class Remember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {checked: []};\n    // this.handleNew = this.handleNew.bind(this);\n    // this.handleChange = this.handleChange.bind(this); \n  }\n\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async getItemsDone() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    console.log('DATA IS: ' + JSON.stringify(data))\n    if (JSON.stringify(data) === undefined) {\n      this.addDayToFirebase();\n    } else {\n    const items = data.done;\n    this.setState({checked: items}); \n    return items;\n    }\n  }\n\n  isDone(item){\n    // const idk = await this.getItemsDone().toString.includes(item) ? 'checked' : ''\n    // const idk = await this.getItemsDone();\n    // console.log(this.state.checked)\n    const done = this.state.checked\n    console.log('DONE is: ' + done)\n    // console.log(lol)\n    // console.log(lol.includes('aa'))\n    // const checked = await done.includes(item) ? 'true' : 'false';\n    // console.log(`wtf why ${item} ` + checked)\n    // console.log(done)\n    return this.state.checked.includes(item)\n  }\n\n  // async wtf(){\n  //   // console.log('this.state.checked is ' + this.state.checked)\n  //   const items = await this.getItemsDone()\n  //   // console.log(items)\n  //   this.setState({checked: items}); \n  // }\n\n  async handleCheck(item){\n    this.setState(prevState => ({\n      checked: [...prevState.checked, item]\n    }))\n    this.updateDayInFirebase()\n  }\n\n  reset(){\n    this.setState({checked: []});\n    this.updateDayInFirebase(); \n  }\n\n    getTimeRemaining(){\n      const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n      const days = Math.floor( total/(1000*60*60*24) );\n      return days\n  }\n\n  checkboxesCrossed() {\n      let checkboxesCrossed = 0;\n      let itemsDone = this.itemsDone();\n\n      checkboxesCrossed = itemsDone.length;\n      \n      return checkboxesCrossed;\n  }\n\n  itemsDone() {\n      let itemsDone = [];\n\n      if(document.getElementById('Obsidian') !== null) {\n          let idk;\n          idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n          idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n          idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n          idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n          idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n          idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n          idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n          idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('Self-Inquiry') : null;\n          idk = document.getElementById('Writing').checked ? itemsDone.push('Writing') : null;\n          idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n      }\n      return itemsDone;\n  }\n\n  async addDayToFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await setDoc(docRef, payload);\n    }\n\n  async updateDayInFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await updateDoc(docRef, payload);\n    }\n\n\n  // async getItemsDone() {\n  //     const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n  //     const docSnapshot = await getDoc(docRef)\n  //     const data = docSnapshot.data();\n  //     console.log(data.done)\n  //     return data.done;\n  // }\n\n\n  render() {\n    return (\n        <div id=\"Remember\">\n          <details open>\n            <summary>◭ 💯%</summary>\n              ⭐ Switch to thoughts in English <br/><br/>\n\n              What can I do today to be satisfied with this day ending? <br/>\n\n              <input id='Codecademy' checked={this.isDone('Codecademy')} type=\"checkbox\" onChange={()=>{this.handleCheck('Codecademy')}} />👉<a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a>👈 <br/>\n              <input id='SDS' checked={this.isDone('SDS')} onChange={()=>{this.handleCheck('SDS')}} type=\"checkbox\"  /> SDS 🧘🏻‍♂️<br/>\n              <input id='Sport' checked={this.isDone('Sport')} onChange={()=>{this.handleCheck('Sport')}} type=\"checkbox\"  /> Sport 💪 <br/>\n              <input id='Obsidian' checked={this.isDone('Obsidian')} onChange={()=>{this.handleCheck('Obsidian')}} type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n              <input id='Read' checked={this.isDone('Read')} onChange={()=>{this.handleCheck('Read')}} type=\"checkbox\"  /> Read 📕<br/>\n              <input id='Anki' checked={this.isDone('Anki')} onChange={()=>{this.handleCheck('Anki')}} type=\"checkbox\"  /> Anki <br/>\n\n              <details>\n                <summary><input id='Affirmation' checked={this.isDone('Affirmation')} onChange={()=>{this.handleCheck('Affirmation')}} type=\"checkbox\"  /> Affirmation ▼ <br/></summary>\n                <Affirmation/>\n              </details>\n\n              <details>\n                <summary><input id='SelfInquiry' checked={this.isDone('Self-Inquiry')} onChange={()=>{this.handleCheck('Self-Inquiry')}} type=\"checkbox\"  /> Self-Inquiry ▼  <br/></summary>\n                <SelfEnquiry/>\n              </details>\n              <input id='Writing' checked={this.isDone('Writing')} onChange={()=>{this.handleCheck('Writing')}} type=\"checkbox\"  /><abbr title=\"~Honest externalization, so anyway... 🤔\">Writing</abbr><br/>\n              <input id='Contemplation' checked={this.isDone('Contemplation')} onChange={()=>{this.handleCheck('Contemplation')}} type=\"checkbox\"  /> Contemplation ↓<br/>\n              <button onClick={() => {this.reset()}}>reset</button>\n            </details> <br />\n\n\n            <TranscendingSelf />\n            <Ideas />\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getItemsDone();\n    // document.addEventListener(\"keydown\", (e) => \n    //     e.code === \"Enter\" && alert('yeah well, but who is aware of ' + document.getElementById('WhoIamInput').value));\n    // this.wtf()\n    // setInterval(() => {\n    //   this.wtf() // can I leave this like this for sync or should I just // ok I guess this is necesasry lol\n    //   // this.setState({ date: new Date() }); \n    // }, 1500);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction Playground() {\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    useEffect(\n      () =>\n        onSnapshot(collection(db, \"SDSlog\"), (snapshot) =>\n          // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n          // console.log(snapshot.docs.map(doc => doc.data()))\n          setData(snapshot.docs.map(doc => doc.data()))\n        ),\n      []\n    );\n\n        return (\n            <div>\n                <h1>IDK</h1>\n                {data.map(item => (\n                    <h1>{item.idea}</h1>\n                ))}\n            </div>\n        )\n    }\n\nexport default Playground;","export const Tarot = {\n    cards: [\n        {\"id\":\"1\",\"card\":\"0_Fool\",\"meaning\":\"New beginnings, optimism, trust in life\"},\n        {\"id\":\"2\",\"card\":\"1_Magician\",\"meaning\":\"Action, the power to manifest\"},\n        {\"id\":\"3\",\"card\":\"2_High_Priestess\",\"meaning\":\"Inaction, going within, the subconscious\"},\n        {\"id\":\"4\",\"card\":\"3_Empress\",\"meaning\":\"Abundance, nurturing, fertility, life in bloom!\"},\n        {\"id\":\"5\",\"card\":\"4_Emperor\",\"meaning\":\"Structure, stability, rules and power\"},\n        {\"id\":\"6\",\"card\":\"5_Hierophant\",\"meaning\":\"Institutions, tradition, society and its rules\"},\n        {\"id\":\"7\",\"card\":\"6_Lovers\",\"meaning\":\"Sexuality, passion, choice, uniting\"},\n        {\"id\":\"8\",\"card\":\"7_Chariot\",\"meaning\":\"Movement, progress, integration\"},\n        {\"id\":\"9\",\"card\":\"8_Strength\",\"meaning\":\"Courage, subtle power, integration of animal self\"},\n        {\"id\":\"10\",\"card\":\"9_Hermit\",\"meaning\":\"Meditation, solitude, consciousness\"},\n        {\"id\":\"11\",\"card\":\"10_Wheel_of_Fortune\",\"meaning\":\"Cycles, change, ups and downs\"},\n        {\"id\":\"12\",\"card\":\"11_Justice\",\"meaning\":\"Fairness, equality, balance\"},\n        {\"id\":\"13\",\"card\":\"12_Hanged_Man\",\"meaning\":\"Surrender, new perspective, enlightenment\"},\n        {\"id\":\"14\",\"card\":\"13_Death\",\"meaning\":\"The and of something, change, the impermeability of all things\"},\n        {\"id\":\"15\",\"card\":\"14_Temperance\",\"meaning\":\"Balance, moderation, being sensible\"},\n        {\"id\":\"16\",\"card\":\"15_Devil\",\"meaning\":\"Destructive patterns, addiction, giving away your power\"},\n        {\"id\":\"17\",\"card\":\"16_Tower\",\"meaning\":\"Collapse of stable structures, release, sudden insight\"},\n        {\"id\":\"18\",\"card\":\"17_Star\",\"meaning\":\"Hope, calm, a good omen!\"},\n        {\"id\":\"19\",\"card\":\"18_Moon\",\"meaning\":\"Mystery, the subconscious, dreams\"},\n        {\"id\":\"20\",\"card\":\"19_Sun\",\"meaning\":\"Success, happiness, all will be well\"},\n        {\"id\":\"21\",\"card\":\"20_Judgement\",\"meaning\":\"Rebirth, a new phase, inner calling\"},\n        {\"id\":\"22\",\"card\":\"21_World\",\"meaning\":\"Completion, wholeness, attainment, celebration of life\"},\n        {\"id\":\"23\",\"card\":\"Swords14\",\"meaning\":\"Serious, controlling, rational and mind\\/intellect-focused\"},\n        {\"id\":\"24\",\"card\":\"Swords13\",\"meaning\":\"Intelligent, writer, communicative yet cold - cuts through B.S.\"},\n        {\"id\":\"25\",\"card\":\"Swords12\",\"meaning\":\"Fierce, determined, aggressively pursues goals\"},\n        {\"id\":\"26\",\"card\":\"Swords11\",\"meaning\":\"Mentally unstable or intellectually immature, acts without thinking\"},\n        {\"id\":\"27\",\"card\":\"Swords01\",\"meaning\":\"A fresh start, a sudden opportunity or idea, clarity\"},\n        {\"id\":\"28\",\"card\":\"Swords02\",\"meaning\":\"Indecision\"},\n        {\"id\":\"29\",\"card\":\"Swords03\",\"meaning\":\"Heartbreak, betrayal\"},\n        {\"id\":\"30\",\"card\":\"Swords04\",\"meaning\":\"Meditation, rest, retreat\"},\n        {\"id\":\"31\",\"card\":\"Swords05\",\"meaning\":\"Mind games, hostility\"},\n        {\"id\":\"32\",\"card\":\"Swords06\",\"meaning\":\"Leaving, accepting help, going somewhere better\"},\n        {\"id\":\"33\",\"card\":\"Swords07\",\"meaning\":\"Secret plans, abandoning ship\"},\n        {\"id\":\"34\",\"card\":\"Swords08\",\"meaning\":\"Feeling powerless and stuck\"},\n        {\"id\":\"35\",\"card\":\"Swords09\",\"meaning\":\"Overactive mind, anxiety\"},\n        {\"id\":\"36\",\"card\":\"Swords10\",\"meaning\":\"Feeling defeated, self sabotage\"},\n        {\"id\":\"37\",\"card\":\"Cups14\",\"meaning\":\"Repression of deep feelings, possible alcoholism\"},\n        {\"id\":\"38\",\"card\":\"Cups13\",\"meaning\":\"Emotionally nurturing, intuitive, sensitive\"},\n        {\"id\":\"39\",\"card\":\"Cups12\",\"meaning\":\"Romantic, adventurous, following one's heart\"},\n        {\"id\":\"40\",\"card\":\"Cups11\",\"meaning\":\"Creative, inspired, learning artistic skill\"},\n        {\"id\":\"41\",\"card\":\"Cups01\",\"meaning\":\"Emotional fulfillment, joy\"},\n        {\"id\":\"42\",\"card\":\"Cups02\",\"meaning\":\"Partnership, mutual attraction, compatibility\"},\n        {\"id\":\"43\",\"card\":\"Cups03\",\"meaning\":\"Celebration, fun with friends, laughter\"},\n        {\"id\":\"44\",\"card\":\"Cups04\",\"meaning\":\"Boredom, dissatisfaction with what is being offered\"},\n        {\"id\":\"45\",\"card\":\"Cups05\",\"meaning\":\"Dwelling on the negative, self pity\"},\n        {\"id\":\"46\",\"card\":\"Cups06\",\"meaning\":\"Sentimentality, kindness, help\"},\n        {\"id\":\"47\",\"card\":\"Cups07\",\"meaning\":\"So many choices! Indecision, getting lost in fantasy\"},\n        {\"id\":\"48\",\"card\":\"Cups08\",\"meaning\":\"Abandoning something in search of something better\"},\n        {\"id\":\"49\",\"card\":\"Cups09\",\"meaning\":\"Indulgence, self-satisfaction\"},\n        {\"id\":\"50\",\"card\":\"Cups10\",\"meaning\":\"Emotional bliss, happiness, attainment\"},\n        {\"id\":\"51\",\"card\":\"Wands14\",\"meaning\":\"Career focused, mature, passionate\"},\n        {\"id\":\"52\",\"card\":\"Wands13\",\"meaning\":\"Confidant, focused, has zest for life\"},\n        {\"id\":\"53\",\"card\":\"Wands12\",\"meaning\":\"An adventurous risk taker who follows his passions\"},\n        {\"id\":\"54\",\"card\":\"Wands11\",\"meaning\":\"Newly inspired, excited about life and work\"},\n        {\"id\":\"55\",\"card\":\"Wands01\",\"meaning\":\"New beginnings, creative spark, fertile ideas\"},\n        {\"id\":\"56\",\"card\":\"Wands02\",\"meaning\":\"Contemplation, assessing ones life direction\"},\n        {\"id\":\"57\",\"card\":\"Wands03\",\"meaning\":\"Reaping the rewards of your efforts\"},\n        {\"id\":\"58\",\"card\":\"Wands04\",\"meaning\":\"Celebration, safety, the home\"},\n        {\"id\":\"59\",\"card\":\"Wands05\",\"meaning\":\"Competition, minor struggles or disagreements\"},\n        {\"id\":\"60\",\"card\":\"Wands06\",\"meaning\":\"Success, accolades and achievement\"},\n        {\"id\":\"61\",\"card\":\"Wands07\",\"meaning\":\"Feeling defensive and on guard\"},\n        {\"id\":\"62\",\"card\":\"Wands08\",\"meaning\":\"Speed, things manifesting quickly\"},\n        {\"id\":\"63\",\"card\":\"Wands09\",\"meaning\":\"Pessimism, gearing up for the worst\"},\n        {\"id\":\"64\",\"card\":\"Wands10\",\"meaning\":\"Feeling oppressed, exhaustion, too many responsibilities\"},\n        {\"id\":\"65\",\"card\":\"Pents14\",\"meaning\":\"Enjoys the good life (food, drink and leisure), financially secure\"},\n        {\"id\":\"66\",\"card\":\"Pents13\",\"meaning\":\"Healthy in body and finances, grounded and calm\"},\n        {\"id\":\"67\",\"card\":\"Pents12\",\"meaning\":\"Cautious, sensible and slow to progress\"},\n        {\"id\":\"68\",\"card\":\"Pents11\",\"meaning\":\"Student, commitment to learning\"},\n        {\"id\":\"69\",\"card\":\"Pents01\",\"meaning\":\"Financial reward, clarity of life purpose, goals\"},\n        {\"id\":\"70\",\"card\":\"Pents02\",\"meaning\":\"Balance, multitasking\"},\n        {\"id\":\"71\",\"card\":\"Pents03\",\"meaning\":\"Meaningful work, annoying one's work, suitable career\"},\n        {\"id\":\"72\",\"card\":\"Pents04\",\"meaning\":\"Hoarding, feeling poor, holding self back out of fear\"},\n        {\"id\":\"73\",\"card\":\"Pents05\",\"meaning\":\"Minor money troubles, health problems, feeling like an outsider\"},\n        {\"id\":\"74\",\"card\":\"Pents06\",\"meaning\":\"Charity, accepting and giving help\"},\n        {\"id\":\"75\",\"card\":\"Pents07\",\"meaning\":\"Patience, waiting for your plans to bear fruit\"},\n        {\"id\":\"76\",\"card\":\"Pents08\",\"meaning\":\"Hard work, focused efforts, laying the groundwork\"},\n        {\"id\":\"77\",\"card\":\"Pents09\",\"meaning\":\"Luxury, rest, financial and material comforts\"},\n        {\"id\":\"78\",\"card\":\"Pents10\",\"meaning\":\"Financial success, strong business relationship\"}\n    ]\n}\n\nexport default Tarot;","import React, { setState, useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, arrayUnion, updateDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\n// import tarot from '../Tarot/tarot.json';\nimport tarot from '../Tarot/tarot.jsx';\nimport { FormControl } from 'react-bootstrap';\nimport { Buttons } from '../Sandbox/Buttons';\n// import Toggle from 'react-native-toggle-element';\nimport ToggleTheme from \"react-toggle-theme\";\n\n\nexport default function Tarot() {\n\n    const [data, setData] = useState([{ colors: [\"Loading...\"]}]);\n    const [starred, setStarred] = useState([{ starred: []}]);\n    const [mode, setMode] = useState('new');\n    const [getOldCard, setOldCard] = useState('');\n    const [getNewCard, setNewCard] = useState('');\n\n    const [toggleValue, setToggleValue] = useState(false);\n    const [currentTheme, setCurrentTheme] = useState(\"dark\");\n\n    const collectionRef = collection(db, \"Colors\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n            setData(snapshot.docs.map(doc => doc.data()))\n            ),\n        []\n    );\n\n    useEffect(\n      () => {\n          newCard();\n          getStarred();\n          // document.getElementById('cardImg').click()\n      }, []\n    )\n\n\n    const newCard = async (num) => {\n        if (num === undefined) {\n          const random = Math.floor(Math.random() * 78 + 1);\n          num = random\n        }\n        console.log('num is: ' + num);\n\n        const docRef = doc(db, \"Tarot\", num.toString());\n        const cardInfo = await getDoc(docRef);\n\n        let card = cardInfo.data().card;\n        let cardOld = card;\n        setOldCard(card);\n        console.log('old card state is: ' + getOldCard)\n        const meaning = cardInfo.data().meaning;\n        console.log('meaning is: ' + meaning)\n\n        card = card.replace('Pents', 'Coins');\n\n        card = card.replace(/[1-9][0-9]_/, 'The');\n        card = card.replace(/[0-9]_/, 'The');\n\n        card = card.replace('11', 'Page');\n        card = card.replace('12', 'Knight');\n        card = card.replace('13', 'Queen');\n        card = card.replace('14', 'King');\n        card = card.replace('01', 'Ace');\n\n        card = card.includes('10') ? card : card.replace('0', '');\n        card = card.replace('TheHanged_Man', 'TheHangedMan');\n        // card = card.replace('Hierophant', 'TheHierophant');\n        // card = card.replace('World', 'TheWorld');\n        card = card.replace('TheHigh_Priestess', 'HighPriestess');\n        card = card.replace('TheWheel_of_Fortune', 'WheelOfFortune');\n        card = card.replace('TheJustice', 'Justice');\n        card = card.replace('TheJudgement', 'Judgement');\n        card = card.replace('TheDeath', 'Death');\n        card = card.replace('TheTemperance', 'Temperance');\n        card = card.replace('TheStrength', 'Strength');\n        card = card.replace('CupsQueen', 'queenscups');\n        card = card.replace('WandsKnight', 'KnightWands');\n        // card = card.replace('Hermit', 'TheHermit');\n        // card = card.replace('Tower', 'TheTower');\n        // card = card.replace('Devil', 'TheDevil');\n        // card = card.replace('Star', 'TheStar');\n        // card = card.replace('Sun', 'TheSun');\n        // card = card.replace('Empress', 'TheEmpress');\n\n        card = card.replace('SwordsKnight', 'KnightOfSwords');\n\n        setNewCard(card);\n        console.log('New card state is: ' + getNewCard);\n\n        let oldStyle = currentTheme === \"dark\"\n        if (oldStyle) {\n          document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${cardOld}.jpg`;\n        } else {\n            document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/NFT/min/${card}.jpg`;\n        }\n\n        let cardSearch = card.replace(/[0-9]/, '');\n\n        cardSearch = cardSearch.replace('King', '');\n        cardSearch = cardSearch.replace('Knight', '');\n        cardSearch = cardSearch.replace('Queen', '');\n        cardSearch = cardSearch.replace('Page', '');\n\n        cardSearch = cardSearch.match(/[A-Z][a-z]+|[0-9]+/g).join(\"&nbsp;\")\n        console.log('cardSearch is: ' + cardSearch)\n        console.log('mode is: ' + mode)\n      \n\n        document.getElementById('card').innerHTML = `<a id=\"cardLink\" href=\"https://crypto.com/nft/collection/900b1c3c2d27e6ccd5bde953c42c4e4d?search=${nameParser(cardOld, cardSearch, true)}\" target=\"_blank\">${'💲 Market 🔍'}</a>`;\n        document.getElementById('googleSearch').innerHTML = `<a id=\"cardLink\" href=\"https://www.google.com/search?q=Tarot ${nameParser(cardOld, cardSearch)}\" target=\"_blank\">${'Google 🔍'}</a>`;\n        document.getElementById('meaningTarot').innerHTML = meaning;\n    }\n\n\n\n    const nameParser = (card, cardSearch, market) => {\n        const split = card.split(/([0-9]+)/)\n        console.log('split is: ' + split)\n\n        let type = split[0]\n        type = type.replace('Pents', 'Coins');\n\n        let num = split[1]\n\n        num = num.replace('11', 'Page');\n        num = num.replace('12', 'Knight');\n        num = num.replace('13', 'Queen');\n        num = num.replace('14', 'King');\n        num = num.replace('01', 'Ace');\n\n        num = num.includes('10') ? num : num.replace('0', '');\n\n        if(type === ''){\n          cardSearch = market ? cardSearch.replace('The&nbsp;', ''): cardSearch;\n          console.log('cardSearch is: ' + cardSearch)\n          return cardSearch\n        } else {\n          return num + ' of ' + type\n        }\n    }\n\n    const editMeaning = () => {\n      var meaning = document.getElementById(\"meaningTarot\");\n      var saveButton = document.getElementById('saveButton');\n      \n      if (meaning.contentEditable == 'false') {\n        meaning.contentEditable = true;\n        meaning.style['text-decoration']='underline';\n        meaning.style.fontWeight = 'normal';\n        saveButton.innerHTML = '💾'\n      } else {\n        meaning.contentEditable = false;\n        meaning.style['text-decoration']='none';\n        meaning.style.fontWeight = 'bold';\n        saveButton.innerHTML = '✏️'\n      }\n    }\n\n\n    const setColor = (color) => {\n      document.body.style.backgroundColor = color;\n    }\n\n    const saveColor = async () => {\n      const docRef = doc(db, 'Colors', 'Tarot');\n      const color = document.body.style.backgroundColor ;\n      let payload = {colors: arrayUnion(color)};\n      \n      await updateDoc(docRef, payload);\n    }\n\n    const openSpoiler = () => {\n      document.getElementById('spoiler').open = 'true';\n    }\n\n\n    const toggleMode = () => {\n      if (currentTheme === 'light') {\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${getOldCard}.jpg`;\n      } else {\n          document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/NFT/min/${getNewCard}.jpg`;\n      }\n    }\n\n\n    const getStarred = async () => {\n      const docRef = doc(db, 'Tarot', 'Starred');\n      const docSnapshot = await getDoc(docRef);\n\n      const list = JSON.stringify(docSnapshot.data())\n      // const list = docSnapshot.data();\n\n      setStarred(list);\n      console.log(\"docSnapshot.data is: \" + list);\n\n      console.log('starred is: ' + JSON.stringify(starred));\n\n      return starred\n    }\n\n    const isStarred = (id) => {\n      if (starred.includes(id)) {\n        return '⭐'\n      } else {\n        return 'ㅤ '\n      }\n    }\n\n    const addStarred = async () => {\n      let pic = document.getElementById('cardImg').src\n      pic = pic.replace('https://willthisdofor.art/tarot/pics/', '');\n      pic = pic.replace('.jpg', '');\n      console.log('pic is: ' + pic)\n\n      const docRef = doc(db, 'Tarot', 'Starred');\n      const payload = {List: arrayUnion(pic)};\n      await updateDoc(docRef, payload);\n    }\n\n  return (\n    <div id='Tarot'><br />\n        <img id='cardImg' onClick={() => newCard()} src='https://willthisdofor.art/tarot/pics/tarotBack.jpg' alt=\"tarot\" /> <br /><br />\n\n        <div id=\"answerButtons\">\n          <button onClick={openSpoiler} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n\n\n        <details id=\"spoiler\">\n          <summary>▼</summary> <br />\n          <h2 id=\"meaningTarot\" contenteditable=\"false\">idk</h2> <button id=\"saveButton\" onClick={ () => { editMeaning() }}>✏️</button>\n          <br /><br />\n          <h3 id=\"card\">idk</h3>\n\n          <FormControl style={{'backgroundColor': '#797979', 'color': 'white'}} as=\"select\" onChange={(e) => newCard(e.target.value)}>\n                {tarot.cards && tarot.cards.map((e, id) => {\n                return <option key={id} value={e.id}>{isStarred(e.card)}{e.card}</option>;\n            })} </FormControl>\n          <button onClick={() => addStarred() }>⭐</button>\n\n        </details>\n        <br /><br />\n\n          <div onClick={() => toggleMode()}>\n            <ToggleTheme id=\"checkboxTogglerLol\" selectedTheme={currentTheme} onChange={setCurrentTheme}/>\n            <input type=\"checkbox\" id=\"checkboxTogglerLol\" />\n          </div>\n\n            <br/>\n            <a id=\"googleSearch\" href=\"https://www.google.com/search?q=test\" target=\"_blank\">Google</a>\n            \n\n\n        <br /><br />\n        {   \n            data['0'].colors.map((color, index) => (\n              <button onClick={() => setColor(color)} style={{backgroundColor: color}} key={index}>⠀</button>\n            ))\n        }\n\n        <button onClick={() => saveColor()}>💾</button>\n    </div> \n  );\n}\n\n","import React from 'react';\n\nexport class Goals extends React.Component {\n    // handleIdea() {\n    //     const newTime = new Date()\n\n    //     let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n    //     if (idea != null && idea != \"\") {   \n    //       fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n    //     }\n    //   }\n\n  render() {\n    return (\n        <div style={{'border' : '1px solid white', 'margin-left' : '10px'}} id=\"Goals\">\n            <h1><u>Goals</u>🎯</h1>\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >💲⚙️💱  while 🧘‍♂️</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Go to USA 🇺🇸</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a black belt 🥋</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Build a digital brain 👾</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a Ph.D in AI</h2><br />\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get Enlightened 👁️</h2><br />\n            {/* <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Learn Swift</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Learn React & NodeJS</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Ralston's CAP while it's possible...</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Own 1 share of Tesla</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Buy <a href=\"http://TheCosmicJoke.com\" target=\"_blank\">TheCosmicJoke.com</a></h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Travel the world ✈️</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Fill my ISI with Xenon</h2><br /> */}\n\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ColorPicker from \"./ColorPicker\";\nimport { Stocks } from \"./Stocks\";\nimport { Buttons } from \"./Buttons\";\nimport { Chemistry } from \"./Chemistry\";\nimport { Counter } from \"./Counter\";\nimport { Notepad } from \"./Notepad\";\nimport { Motivation } from \"./Motivation\";\nimport Pfive from \"./Pfive\";\nimport Squares from \"./Squares\";\nimport { EjaculationTimer } from \"./EjaculationTimer\";\nimport { TS } from \"./TS\";\nimport { Remember } from \"./ Remember\";\nimport { VisionBoard } from \"./Vision Board\";\nimport { RandomIdea } from \"./RandomIdea\";\nimport Playground from \"./Playground\";\nimport Ideas from \"./Ideas\";\nimport Tarot from \"../Tarot/Tarot\";\nimport { Goals } from \"./Goals\";\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <Goals />\n            {/* <RandomIdea /> */}\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        {/* <Pfive />\n        <Squares /> */}\n        {/* <Tarot /> */}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","// Whatever, idk\nimport { Link } from \"react-router-dom\";\nimport React, { setState, useState, useEffect } from 'react';\n\n\nexport const Footer = () => {\n\n    const randomColor = () => {\n        var color = '#';\n        var letters = '0123456789ABCDEF';\n        \n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        console.log(color);\n        document.body.style.backgroundColor = color;\n        // document.getElementById(\"colorName\").innerText = color;\n    }\n\n    useEffect(\n        () => {\n            randomColor();\n        }\n    )\n    \n\n  return (\n    <div id=\"footer\">\n      <br />\n      <Link to=\"/build\">Dashboard</Link>   | \n      <Link to=\"/tarot\">Tarot</Link>   | \n      <Link to=\"/chemistry\">Chemistry</Link> |\n      <Link to=\"/stocks\">Stocks</Link> |\n      <Link to=\"/whatEats\">WhatEats</Link> |\n      <Link to=\"/dreams\">Dreams</Link> |\n      <Link to=\"/art\">Art</Link> |\n      <br />\n      <br />\n      <button onClick={() => randomColor()}>Random color</button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  collection,\n  onSnapshot,\n  setDoc,\n  arrayUnion,\n  updateDoc,\n  getDoc,\n  doc,\n  query,\n} from \"@firebase/firestore\";\nimport db from \"../Sandbox/firebase\";\nimport moment from \"moment\";\n\nexport const Dreams = () => {\n  const [data, setData] = useState([{ Keywords: [\"Loading...\"], id: [\"idk\"] }]);\n\n  const collectionRef = collection(db, \"Dreams\");\n\n  const q = query(collectionRef);\n\n  useEffect(\n    () =>\n      onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const randomKeyword = () => {\n    // console.log('data 0 is: ' + JSON.stringify(data))\n    // // console.log(data[0].Keywords[1]);\n    const randomNum = Math.floor(Math.random() * data.length);\n    const word = data[randomNum].id;\n    // document.getElementById('randomKeyword').innerHTML = word;\n    return word;\n    // return 'idk';\n  };\n\n  const saveKeyword = async (e) => {\n    e.preventDefault();\n\n    const keyword = document.querySelector(\"#keyword\").value;\n\n    const docRef = doc(db, \"Dreams\", \"Keywords\");\n    let payload = { Keywords: arrayUnion(keyword) };\n    await updateDoc(docRef, payload);\n\n    const timeNow = moment().toString();\n    const keywordExists = JSON.stringify(data).includes(keyword);\n\n    if (!keywordExists) {\n      let payload2 = { count: 1, dates: [timeNow] };\n      const docRef2 = doc(db, \"Dreams\", keyword);\n      await setDoc(docRef2, payload2);\n\n      document.querySelector(\"#keyword\").value = \"\";\n      document.querySelector(\"#keyword\").placeholder = \"Saved! Another one?\";\n    } else {\n      await incrementCount(keyword);\n\n      document.querySelector(\"#keyword\").value = \"\";\n      document.querySelector(\"#keyword\").placeholder =\n        \"count++, Anything else?\";\n    }\n  };\n\n  const setNewRandomKeyword = () => {\n    // const randomNum = Math.floor(Math.random() * data[0].Keywords.length);\n    // const word = data[0].Keywords[randomNum]\n    document.getElementById(\"randomKeyword\").innerHTML = randomKeyword();\n  };\n\n  const incrementCount = async (keyword) => {\n    const docRef = doc(db, \"Dreams\", keyword);\n\n    const docSnapshot = await getDoc(docRef);\n    console.log(\"docSnapshot.data is: \" + JSON.stringify(docSnapshot.data()));\n    const currentCount = await docSnapshot.data().count;\n    await console.log(\"CurrentCount is: \" + currentCount);\n\n    const timeNow = moment().toString();\n    let payload = { count: currentCount + 1, dates: arrayUnion(timeNow) };\n    await updateDoc(docRef, payload);\n  };\n\n  return (\n    <div id=\"dreams\">\n      <br />\n      <h1>\n        Did you dream of <u id=\"randomKeyword\">{randomKeyword()}</u> ?{\" \"}\n      </h1>\n      <button onClick={() => setNewRandomKeyword()}>Next</button>\n      <button\n        onClick={() =>\n          incrementCount(document.getElementById(\"randomKeyword\").innerHTML)\n        }\n      >\n        +\n      </button>\n      <br />\n      <br />\n      <form onSubmit={(e) => saveKeyword(e)}>\n        <input id=\"keyword\" type=\"text\" placeholder=\"Add keyword\" />\n        <button type=\"submit\" onClick={(e) => saveKeyword(e)}>\n          💾\n        </button>{\" \"}\n        <br />\n        <br />\n      </form>\n      list of keywords:\n      {\n        // ⬜ Display sorted by id\n        data.map((item) => (\n          <li>\n            {item.id} <button onClick={() => incrementCount(item.id)}>+</button>\n          </li>\n        ))\n      }\n      {/* {\n              data['0'].Keywords.map((keyword, index) => (\n                <div>\n                  <li key={index}>{keyword} <button onClick={() => incrementCount(keyword)}>+</button></li>\n                  \n                </div>\n              ))\n            } */}\n    </div>\n  );\n};\n","import { Link } from \"react-router-dom\";\n\nexport const WhatEats = () => {\n\n    const randomKeyword = () => {\n        return 'idk'\n    }\n\n  return (\n    <div id=\"whatEats\">\n      <h1>So, what to eat?</h1>\n      <img src=\"https://i.redd.it/ga8ce2xiljr21.jpg\" alt=\"food\" />\n\n      <h1><a style={{color: 'black'}} href=\"http://the-cosmic-joke.com/\" target=\"_blank\">http://the-cosmic-joke.com/</a></h1>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport class Art extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n          file: null\n        }\n        this.handleChange = this.handleChange.bind(this)\n      }\n\n      handleChange(event) {\n        this.setState({\n          file: URL.createObjectURL(event.target.files[0])\n        })\n      }\n\n    preview() {\n        document.getElementById('blah').src=URL.createObjectURL(this.files[0]);\n        // document.getElementById('blah').src='idk'\n        console.log('wtf')\n    }\n\n    onChange = (e) => {\n        console.log(e.target.files);\n        console.log('onChanged!!!!!1111')\n      };\n\n  render() {\n    return (\n        <div id=\"Art\">\n            <form id=\"new_document_attachment\" method=\"post\">\n                <div class=\"actions\"><input type=\"submit\" name=\"commit\" value=\"Submit\" /></div>\n                <input type=\"file\" id=\"document_attachment_doc\" onChange={this.handleChange} />\n            </form>\n\n            <img src={this.state.file} id=\"blah\" alt=\"your image\" width=\"100\" height=\"100\" onClick={this.handleChange}/>\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    const form = document.getElementById(\"new_document_attachment\");\n    const fileInput = document.getElementById(\"document_attachment_doc\");\n    \n    fileInput.addEventListener('change', () => {\n      form.submit();\n      // document.getElementById('blah').src = window.URL.createObjectURL(this.files[0])\n    });\n    \n    window.addEventListener('paste', e => {\n      fileInput.files = e.clipboardData.files;\n      // document.getElementById('blah').src = window.URL.createObjectURL(this.files[0])\n    });\n  }\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Contact } from \"./Contact\";\nimport { Sandbox } from \"./Sandbox/Sandbox\";\nimport { Clock } from \"./Sandbox/Clock\";\nimport { Helmet } from \"react-helmet\";\nimport React, { useEffect, useState } from \"react\";\nimport db from \"./Sandbox/firebase\";\nimport moment from \"moment\";\nimport Tarot from \"./Tarot/Tarot\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Chemistry } from \"./Sandbox/Chemistry\";\nimport { Footer } from \"./Sandbox/Footer\";\nimport { Stocks } from \"./Sandbox/Stocks\";\nimport ColorPicker from \"./Sandbox/ColorPicker\";\nimport { Dreams } from \"./Sandbox/Dreams\";\nimport { WhatEats } from \"./Sandbox/WhatEats\";\nimport { Art } from './Sandbox/Art'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Helmet>\n          <meta\n            http-equiv=\"Content-Security-Policy\"\n            content=\"upgrade-insecure-requests\"\n          />\n          {/* <title>My Title</title> */}\n          {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n        </Helmet>\n        <Switch>\n          <Route path=\"/tarot\">\n            <Tarot />\n          </Route>\n\n          <Route path=\"/chemistry\">\n            <ColorPicker />\n          </Route>\n\n          <Route path=\"/stocks\">\n            <Stocks />\n          </Route>\n\n          <Route path=\"/dreams\">\n            <Dreams />\n          </Route>\n\n          <Route path=\"/art\">\n            <Art />\n          </Route>\n\n          <Route path=\"/whatEats\">\n            <WhatEats />\n          </Route>\n\n          <Route path=\"/\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Contact /> \n              <Clock />\n            </header>\n            <Tarot />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}