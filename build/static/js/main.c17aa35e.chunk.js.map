{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Counter.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/Pfive.js","Sandbox/Squares.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Ideas.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","Counter","endtime","total","Date","parse","getTimeRemaining","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Notepad","dbName","handleNew","handleChange","event","a","docRef","doc","db","moment","toString","payload","toDoItem","done","timestamp","serverTimestamp","idea","setDoc","document","placeholder","contenteditable","autocomplete","getText","setDatabaseName","name","for","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","item","checked","Motivation","Pfive","setup","p5","canvasParentRef","createCanvas","parent","draw","xPos","yPos","size","fill","circle","Squares","background","translate","width","height","x","y","strokeWeight","rotate","radians","frameCount","rect","EjaculationTimer","axios","get","then","response","time","JSON","stringify","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","setInterval","incrementSeconds","TS","weekday","Array","day","getDay","messageToAlert","TSdata","alert","printTask","printLesson","Remember","VisionBoard","visionBoard","alt","RandomIdea","handleIdea","Ideas","setData","collectionRef","q","snapshot","Sandbox","Contact","password","authorized","authorize","auth","innerHTML","shrek","display","title","login","removeSpinner","Clock","date","toLocaleTimeString","App","Helmet","content","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c17aa35e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\n\nexport class Counter extends React.Component {\n    getTimeRemaining(endtime){\n        const total = Date.parse(endtime) - Date.parse(new Date());\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n    render() {\n        return (\n            <div>Day #<u>{ this.getTimeRemaining('May 18, 2045')}</u></div>\n        );\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import { collection, onSnapshot, setDoc, doc, serverTimestamp } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Any ideas or To-dos?', dbName: \"Idk\"};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.value;\n  }\n\n  handleChange(event) {    \n    this.setState({value: event.target.value});  \n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    if (dbName === \"toDo\") {\n      payload = {toDoItem: this.state.value, done: 0, timestamp: serverTimestamp()};\n    } else {\n      payload = {idea: this.state.value, timestamp: serverTimestamp()};\n    }\n\n    await setDoc(docRef, payload);\n\n    // this.setState({value: \"Saved! Anything else?\"});  \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> <br />\n        saving to: {this.state.dbName}\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n\n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1}\n\n    setDoc(docRef, payload);\n  }\n\n  return (\n    <div id='toDoList'>\n      <h2>✅ <b><u>To-do list:</u></b></h2>\n\n      {\n        toDos.map(item => (\n          // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n          <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n        ))\n      } <br />\n\n      <details>\n        <summary>Done</summary>\n        {\n          done.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <div><input type=\"checkbox\" checked/> { item.toDoItem } </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n            What can I do today to 📈 my self-esteem?\n            <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n            <br/>\n            ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Pfive = function() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 400).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    let xPos = p5.random(500); // Generate random number between 0 and width\n    let yPos = p5.random(400); // Generate random number between 0 and height\n    let size = p5.random(10, 101); // Generate random number between 10 and 100\n\n    p5.fill(p5.random(256), p5.random(256), p5.random(256));\n    p5.circle(xPos, yPos, size);\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Pfive;\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Squares = function() {\n  const width = 500;\n  const height = 400;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    p5.background(0);\n\n    // Moves rectangle to center of canvas\n    p5.translate(width / 2, height / 2);\n\n    // Creates multiple rotating rectangles\n    for (let x = 500; x > 0; x -= 5) {\n        // Makes height the same as width so it's a square\n        let y = x;\n        p5.strokeWeight(0.5);\n        p5.rotate(p5.radians(p5.frameCount / 50));\n        p5.fill(255, x, 255);\n        p5.rect(0, 0, x, y);\n    }\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Squares;\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #5 FEAR</h3>\n            <button onClick={ () => this.printTask() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport { TS } from './TS';\n\n\nexport class Remember extends React.Component {\n  render() {\n    return (\n        <div id=\"Remember\">\n          💯% <br/>\n            ⭐ Switch to thoughts in English\n\n            <br/><br/>\n            What can I do today to be satisfied with this day ending? <br/>\n            <input type=\"checkbox\"  /> <a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a> <br/>\n            <input type=\"checkbox\"  /> SDS <br/>\n            <input type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n\n            <TS />\n        </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    const collectionRef = collection(db, \"ideas\");\n    // const collectionRef = collection(db, \"SDSlog\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n    onSnapshot(q, (snapshot) =>\n      setData(snapshot.docs.map(doc => doc.data()))\n    ),\n  []\n);\n\n  return (\n    <div id='Ideas'>\n      <h1>💡<u> Firebase ideas:</u></h1>\n\n    {\n        data.map(item => (\n            <h3>{item.idea}</h3>\n        ))\n    }\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorPicker from './ColorPicker';\nimport { Stocks } from './Stocks';\nimport { Buttons } from './Buttons'\nimport { Chemistry } from './Chemistry';\nimport { Counter } from './Counter';\nimport { Notepad } from './Notepad';\nimport { Motivation } from './Motivation';\nimport Pfive from './Pfive';\nimport Squares from './Squares';\nimport { EjaculationTimer } from './EjaculationTimer';\nimport { TS } from './TS';\nimport { Remember } from './ Remember';\nimport { VisionBoard } from './Vision Board';\nimport { RandomIdea } from './RandomIdea';\nimport  Playground from './Playground';\nimport Ideas from './Ideas';\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <RandomIdea />\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        <Pfive />\n        <Squares />\n\n        <Ideas />\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport { Contact } from './Contact';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport { Clock } from './Sandbox/Clock';\nimport { Helmet } from 'react-helmet';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './Sandbox/firebase';\nimport moment from 'moment';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" />\n        {/* <title>My Title</title> */}\n        {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n      </Helmet>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Contact />\n        <Clock />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}