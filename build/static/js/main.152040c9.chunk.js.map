{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Counter.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/Pfive.js","Sandbox/Squares.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/TranscendingSelf.js","Sandbox/Ideas.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Playground.js","Tarot/Tarot.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Counter","total","Date","parse","checkboxesCrossed","itemsDone","length","document","getElementById","checked","push","a","day","getTimeRemaining","docRef","doc","db","toString","payload","PM","done","timestamp","serverTimestamp","setDoc","getDoc","docSnapshot","i","JSON","stringify","undefined","innerHTML","get10DayAvg","setInterval","date","Notepad","dbName","handleNew","handleChange","event","moment","idea","hide","toDoItem","note","updateDoc","placeholder","contenteditable","autocomplete","getText","setDatabaseName","name","for","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","hideDoneItem","open","item","Motivation","Pfive","setup","p5","canvasParentRef","createCanvas","parent","draw","xPos","yPos","size","fill","circle","Squares","background","translate","width","height","x","y","strokeWeight","rotate","radians","frameCount","rect","EjaculationTimer","axios","get","then","response","time","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","incrementSeconds","TranscendingSelf","lesson","setData","collectionRef","q","snapshot","getWeekNumber","getWeekLesson","Lesson","task","getDayNumber","Ideas","hideIdea","fontSize","Remember","includes","getItemsDone","items","addDayToFirebase","isDone","handleCheck","wtf","VisionBoard","visionBoard","alt","RandomIdea","handleIdea","Playground","Tarot","card","newCard","tarot","cardInfo","meaning","Sandbox","Contact","password","authorized","authorize","auth","shrek","display","title","login","removeSpinner","Clock","toLocaleTimeString","App","Helmet","content","path","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.152040c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import db from './firebase';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\n\nexport class Counter extends React.Component {\n    getTimeRemaining(){\n        const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n\n    checkboxesCrossed() {\n        let checkboxesCrossed = 0;\n        let itemsDone = this.itemsDone();\n            \n        checkboxesCrossed = itemsDone.length;\n\n        return checkboxesCrossed;\n    }\n\n    itemsDone() {\n        let itemsDone = [];\n\n        if(document.getElementById('Obsidian') !== null) {\n            let idk;\n            idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n            idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n            idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n            idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n            idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n        }\n        return itemsDone;\n    }\n\n    async addDayToFirebase() {\n        const day = this.getTimeRemaining();\n        const docRef = doc(db, 'Days', `#${day.toString()}`);\n        let payload;\n\n        payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n    \n        await setDoc(docRef, payload);\n      }\n\n\n    async getItemsDone() {\n        const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        console.log(data.done)\n        return data.done;\n    }\n\n    async get10DayAvg() {\n        let total = 0;\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                total += data.PM;\n            }\n        }\n        console.log(`Total: ${total}`)\n        document.getElementById('lol').innerHTML = total/10;\n        return '4';\n    }\n\n    render() {\n        return (\n            <div> \n                <details onChange={this.get10DayAvg()}>\n                    <summary>Day #<u>{ this.getTimeRemaining()}</u> | PM: {this.checkboxesCrossed()}/10 ▼</summary>\n                    10 day avg: <b id='lol'>loading...</b>\n                </details>            \n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // Paste your code here.\n        const oneSecond = 1000;\n        setInterval(() => {\n        this.setState({ date: new Date() });\n        }, oneSecond);\n    }\n}\n","import { collection, onSnapshot, setDoc, doc, serverTimestamp, updateDoc } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'Any ideas or To-dos?', dbName: \"ideas\"};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.value;\n  }\n\n  handleChange(event) {    \n    this.setState({value: event.target.value});\n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    switch(dbName) {\n      case \"ideas\":\n        payload = {idea: this.state.value, timestamp: serverTimestamp(), hide: 0};\n        await setDoc(docRef, payload);\n        break;\n      case \"toDo\":\n        payload = {toDoItem: this.state.value, done: 0, timestamp: serverTimestamp()};\n        await setDoc(docRef, payload);\n        break;\n      case 'dayNote':\n        payload = {note: this.state.value};\n        await updateDoc(docRef, payload);\n        break;\n    }\n    this.setState({value: ''});\n    \n    // this.setState({value: \"Saved! Anything else?\"});  \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n    this.setState({value: `saving to: ${event.target.value}`}); \n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async addDayNote() {\n    const day = this.getTimeRemaining();\n    const docRef = doc(db, 'Days', `#${day.toString()}`);\n    let payload;\n\n    payload = {note: this.state.value, timestamp: serverTimestamp()};\n    \n    await updateDoc(docRef, payload);\n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> <br />\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n{/* \n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label> */}\n\n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"dayNote\"/>\n            <label for=\"starred\">📝</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1, hide: 0};\n\n    setDoc(docRef, payload);\n  }\n\n  const hideDoneItem = async (toDoItem) => {\n    console.log(toDoItem.id)\n    const docRef = doc(db, \"toDo\", toDoItem.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='toDoList'>\n      <details open>\n      <summary><h2>✅ <b><u>To-do list:</u></b></h2></summary>\n\n        {\n          toDos.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n          ))\n        } \n        \n        </details>\n        \n        <br />\n\n      <details>\n        <summary>Done ▼</summary>\n        {\n          done.map(item => (\n            item.hide == 1 ? null : <div><input type=\"checkbox\" checked/> { item.toDoItem } <button onClick={() => hideDoneItem(item)}>×</button> </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n                <details>\n                  <summary>Important ▼</summary>\n                  What can I do today to 📈 my self-esteem?\n                  <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n                  <br/>\n                  ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n                </details> <br />\n\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Pfive = function() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 400).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    let xPos = p5.random(500); // Generate random number between 0 and width\n    let yPos = p5.random(400); // Generate random number between 0 and height\n    let size = p5.random(10, 101); // Generate random number between 10 and 100\n\n    p5.fill(p5.random(256), p5.random(256), p5.random(256));\n    p5.circle(xPos, yPos, size);\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Pfive;\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Squares = function() {\n  const width = 500;\n  const height = 400;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    p5.background(0);\n\n    // Moves rectangle to center of canvas\n    p5.translate(width / 2, height / 2);\n\n    // Creates multiple rotating rectangles\n    for (let x = 500; x > 0; x -= 5) {\n        // Makes height the same as width so it's a square\n        let y = x;\n        p5.strokeWeight(0.5);\n        p5.rotate(p5.radians(p5.frameCount / 50));\n        p5.fill(255, x, 255);\n        p5.rect(0, 0, x, y);\n    }\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Squares;\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n    getWeekNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log(days)\n        return days\n    }\n    getDayNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #{this.getWeekNumber()}</h3>\n            <h3>Day {this.getDayNumber()}</h3>\n            <button onClick={ () => this.getWeekNumber() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\n\nexport default function TranscendingSelf() {\n\n    const [data, setData] = useState([{ lesson: \"Loading...\", id: \"initial\"}]);\n\n    const collectionRef = collection(db, \"Transcending Self\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n    []\n    );\n\n    const getWeekNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 17, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log('days' + days);\n        return days\n    }\n    const getDayNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n    // const parseData = () => {\n    //     const data = JSON.parse(data);\n    //     return data.id\n    // }\n    const printTask = () =>{\n        console.log()\n    }\n\n    const getWeekLesson = async () => {\n        const docRef = doc(db, 'Transcending Self', `Week #${getWeekNumber()}`);\n        const docSnapshot = await getDoc(docRef)\n        // const data = await docSnapshot.data();\n        console.log('data is: ' + JSON.stringify(data))\n        return data;\n    }\n\n  return (\n    <div id='TranscendingSelf' style={{'border' : '1px solid white'}}>\n            <h3>Week #{getWeekNumber()}: {data.map(item => (<b>{item.Lesson}</b> ))}</h3> \n\n            {/* {data.map(item => (<b>{item[`day ${getDayNumber}`]}</b> ))} */}\n            {data.map(item => (<h2>{item.task}</h2> ))}\n\n            {/* {console.log('Data is: ' + JSON.stringify(data))} */}\n\n            <details>\n                <summary><b><u>Day {getDayNumber()}:</u></b></summary>\n                <h1>{JSON.stringify(data)}</h1>\n                <button onClick={ () => getWeekLesson() }>Console log</button>\n            </details>\n            {/* { parseData()} */}\n            <br/>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\", hide: 0 }]);\n\n    const collectionRef = collection(db, \"ideas\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n      []\n    );\n\n  const hideIdea = async (idea) => {\n    console.log(idea)\n    const docRef = doc(db, \"ideas\", idea.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='Ideas'>\n      < br />\n      <details open>\n        <summary><b style={{fontSize : '2em'}}>💡<u> Firebase ideas:</u></b></summary>\n            {\n            data.map(item => (\n                item.hide == 0 ? <h3>{item.idea} <button onClick={() => hideIdea(item)}>×</button></h3> : null\n            ))\n        }\n      </details>\n\n\n    </div>\n  );\n}\n\n","import { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase';\nimport { TS } from './TS';\nimport TranscendingSelf from './TranscendingSelf';\nimport Ideas from './Ideas';\n\n\nexport class Remember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {checked: []};\n    // this.handleNew = this.handleNew.bind(this);\n    // this.handleChange = this.handleChange.bind(this); \n  }\n\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async getItemsDone() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    return data.done;\n  }\n\n  isDone(item){\n    // const idk = await this.getItemsDone().toString.includes(item) ? 'checked' : ''\n    // const idk = await this.getItemsDone();\n    // console.log(this.state.checked)\n    const done = this.state.checked\n    // console.log(lol)\n    // console.log(lol.includes('aa'))\n    // const checked = await done.includes(item) ? 'true' : 'false';\n    // console.log(`wtf why ${item} ` + checked)\n    console.log(done)\n    return this.state.checked.includes(item)\n  }\n\n  async wtf(){\n    // console.log('this.state.checked is ' + this.state.checked)\n    const items = await this.getItemsDone()\n    // console.log(items)\n    this.setState({checked: items}); \n  }\n\n  async handleCheck(item){\n    this.setState(prevState => ({\n      checked: [...prevState.checked, item]\n    }))\n    this.addDayToFirebase()\n  }\n\n  reset(){\n    this.setState({checked: []});\n    this.addDayToFirebase(); \n  }\n\n    getTimeRemaining(){\n      const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n      const days = Math.floor( total/(1000*60*60*24) );\n      return days\n  }\n\n  checkboxesCrossed() {\n      let checkboxesCrossed = 0;\n      let itemsDone = this.itemsDone();\n\n      checkboxesCrossed = itemsDone.length;\n      \n      return checkboxesCrossed;\n  }\n\n  itemsDone() {\n      let itemsDone = [];\n\n      if(document.getElementById('Obsidian') !== null) {\n          let idk;\n          idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n          idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n          idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n          idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n          idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n      }\n      return itemsDone;\n  }\n\n  async addDayToFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await setDoc(docRef, payload);\n    }\n\n\n  async getItemsDone() {\n      const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n      const docSnapshot = await getDoc(docRef)\n      const data = docSnapshot.data();\n      console.log(data.done)\n      return data.done;\n  }\n\n\n  render() {\n    return (\n        <div id=\"Remember\">\n          <details open>\n            <summary>◭ 💯%</summary>\n              ⭐ Switch to thoughts in English <br/><br/>\n\n              What can I do today to be satisfied with this day ending? <br/>\n\n              <input id='Codecademy' checked={this.isDone('Codecademy')} type=\"checkbox\" onChange={()=>{this.handleCheck('Codecademy')}} /> <a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a> <br/>\n              <input id='SDS' checked={this.isDone('SDS')} onChange={()=>{this.handleCheck('SDS')}} type=\"checkbox\"  /> SDS <br/>\n              <input id='Sport' checked={this.isDone('Sport')} onChange={()=>{this.handleCheck('Sport')}} type=\"checkbox\"  /> Sport <br/>\n              <input id='Obsidian' checked={this.isDone('Obsidian')} onChange={()=>{this.handleCheck('Obsidian')}} type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n              <input id='Read' checked={this.isDone('Read')} onChange={()=>{this.handleCheck('Read')}} type=\"checkbox\"  /> Read <br/>\n              <button onClick={() => {this.reset()}}>reset</button>\n            </details> <br />\n\n\n            <TranscendingSelf />\n            <Ideas />\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.wtf()\n    }, 1500);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction Playground() {\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    useEffect(\n      () =>\n        onSnapshot(collection(db, \"SDSlog\"), (snapshot) =>\n          // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n          // console.log(snapshot.docs.map(doc => doc.data()))\n          setData(snapshot.docs.map(doc => doc.data()))\n        ),\n      []\n    );\n\n        return (\n            <div>\n                <h1>IDK</h1>\n                {data.map(item => (\n                    <h1>{item.idea}</h1>\n                ))}\n            </div>\n        )\n    }\n\nexport default Playground;","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\nimport tarot from '../Tarot/tarot.json';\n\n\nexport default function Tarot() {\n\n    const [data, setData] = useState([{ card: \"Loading...\", id: \"initial\" }]);\n\n    const collectionRef = collection(db, \"Tarot\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n            setData(snapshot.docs.map(doc => doc.data()))\n            ),\n        []\n    );\n\n    const newCard = async () => {\n        const random = Math.floor(Math.random() * tarot.length + 1);\n        console.log('random num is: ' + random);\n\n        const docRef = doc(db, \"Tarot\", random.toString());\n        const cardInfo = await getDoc(docRef);\n\n        const card = cardInfo.data().card;\n        console.log('card is: ' + card)\n        const meaning = cardInfo.data().meaning;\n        console.log('meaning is: ' + meaning)\n\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${card}.jpg`;\n        document.getElementById('card').innerHTML = card;\n        document.getElementById('meaning').innerHTML = meaning;\n    }\n\n\n  return (\n    <div id='Tarot'>\n      <h1><u>Tarot</u></h1>\n        <img id='cardImg' src='https://willthisdofor.art/tarot/pics/4_Emperor.jpg' alt=\"tarot\" /> <br />\n        <button class='button' onClick={() => newCard()}>new</button>\n        <h1 id=\"card\">idk</h1>\n        <details>\n          <h2 id=\"meaning\">idk</h2>\n        </details>\n        <br /><br /><br /><br />\n\n    </div> \n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorPicker from './ColorPicker';\nimport { Stocks } from './Stocks';\nimport { Buttons } from './Buttons'\nimport { Chemistry } from './Chemistry';\nimport { Counter } from './Counter';\nimport { Notepad } from './Notepad';\nimport { Motivation } from './Motivation';\nimport Pfive from './Pfive';\nimport Squares from './Squares';\nimport { EjaculationTimer } from './EjaculationTimer';\nimport { TS } from './TS';\nimport { Remember } from './ Remember';\nimport { VisionBoard } from './Vision Board';\nimport { RandomIdea } from './RandomIdea';\nimport  Playground from './Playground';\nimport Ideas from './Ideas';\nimport Tarot from '../Tarot/Tarot';\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <RandomIdea />\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        <Pfive />\n        <Squares />\n        {/* <Tarot /> */}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport { Contact } from './Contact';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport { Clock } from './Sandbox/Clock';\nimport { Helmet } from 'react-helmet';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './Sandbox/firebase';\nimport moment from 'moment';\nimport Tarot from './Tarot/Tarot';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" />\n        {/* <title>My Title</title> */}\n        {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n      </Helmet>\n\n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Contact />\n              <Clock />\n            </header>\n            <Tarot />\n          </Route>\n          <Route path=\"/tarot\">\n            <Tarot />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}