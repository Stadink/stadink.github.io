{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Counter.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/TranscendingSelf.js","Sandbox/Ideas.js","Sandbox/Timer.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Playground.js","Tarot/Tarot.js","Sandbox/Goals.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","Sandbox/Footer.js","Sandbox/Dreams.js","Sandbox/WhatEats.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Counter","stuffDone","total","Date","parse","checkboxesCrossed","itemsDone","length","document","getElementById","checked","push","a","day","getTimeRemaining","docRef","doc","db","toString","payload","PM","done","timestamp","serverTimestamp","setDoc","getDoc","docSnapshot","i","JSON","stringify","undefined","innerHTML","navigator","clipboard","writeText","task","includes","offset","daySelected","get10DayAvg","copyToClipboard","get10DayDone","getDayNumber","getStatus","title","setInterval","date","Notepad","placeholder","dbName","handleNew","handleChange","event","moment","idea","hide","toDoItem","addDayNote","note","updateDoc","dayNote","getDayNote","contenteditable","autocomplete","getText","setDatabaseName","name","for","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","hideDoneItem","open","item","Motivation","EjaculationTimer","axios","get","then","response","time","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","incrementSeconds","TranscendingSelf","lesson","setData","collectionRef","q","snapshot","getWeekNumber","Ideas","hideIdea","fontSize","Timer","renderTime","remainingTime","isPlaying","colors","colorsTime","onComplete","shouldRepeat","delay","getAffirmation","Remember","addDayToFirebase","items","updateDayInFirebase","isDone","handleCheck","width","direction","height","scrollamount","getItemsDone","addEventListener","code","alert","VisionBoard","visionBoard","alt","Playground","Tarot","mode","getOldCard","setOldCard","getNewCard","setNewCard","currentTheme","setCurrentTheme","newCard","tarot","cardInfo","card","cardOld","meaning","oldStyle","cardSearch","match","join","saveColor","body","arrayUnion","toggleMode","saveButton","contentEditable","fontWeight","editMeaning","selectedTheme","index","Goals","Sandbox","Contact","password","authorized","authorize","auth","shrek","display","login","removeSpinner","Clock","toLocaleTimeString","Footer","randomColor","to","Dreams","Keywords","saveKeyword","keyword","randomKeyword","word","setNewRandomKeyword","WhatEats","App","Helmet","content","path","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.33a7a4f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          style={{'backgroundColor': colorName}}\n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import db from './firebase';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\n\nexport class Counter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { stuffDone: [] };\n      }\n      \n    getTimeRemaining(){\n        const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n        // console.log('NEW DATE IS: ' + new Date());\n        // console.log('Time left lol: ' + total/(1000*60*60*24));\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n\n    checkboxesCrossed() {\n        let checkboxesCrossed = 0;\n        let itemsDone = this.itemsDone();\n            \n        checkboxesCrossed = itemsDone.length;\n\n        return checkboxesCrossed;\n    }\n\n    itemsDone() {\n        let itemsDone = [];\n\n        if(document.getElementById('Obsidian') !== null) {\n            let idk;\n            idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n            idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n            idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n            idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n            idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n            idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n            idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n            idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('SelfInquiry') : null;\n            idk = document.getElementById('Writing').checked ? itemsDone.push('Writing') : null;\n            idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n        }\n        return itemsDone;\n    }\n\n    async addDayToFirebase() {\n        const day = this.getTimeRemaining();\n        const docRef = doc(db, 'Days', `#${day.toString()}`);\n        let payload;\n\n        payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n    \n        await setDoc(docRef, payload);\n      }\n\n\n    async getItemsDone() {\n        const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        console.log(data.done)\n        return data.done;\n    }\n\n    async get10DayAvg() {\n        let total = 0;\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                total += data.PM;\n            }\n        }\n        console.log(`Total: ${total}`)\n        document.getElementById('lol').innerHTML = total/10;\n        return '4';\n    }\n\n    async get10DayDone() {\n        let stuffDone = [];\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                stuffDone.push(data.done);\n            } else {\n                stuffDone.push([]);\n            }\n        }\n        console.log(`StuffDone: ${JSON.stringify(stuffDone)}`)\n        this.setState({stuffDone: stuffDone})\n        return '4';\n    }\n\n\n\n    copyToClipboard() {\n        navigator.clipboard.writeText('\\n**Day #' + this.getTimeRemaining() + '**\\n\\n\\n---\\n\\n');\n    }\n\n    fillValues() {\n        for(let i = 0; i < 10; i++) {\n            return <td>❌</td>\n        }\n    }\n\n    getStatus(task, day) {\n        // console.log('Stuff done is: ' + this.state.stuffDone)\n        if(this.state.stuffDone[day] === undefined) {\n            return '⬜'\n        }\n        if(this.state.stuffDone[day].toString().includes(task)) {\n            return '✅';\n        } else {\n            if(day == 0){\n                return '⬜';\n            } else {\n                return '❌';\n            }\n        }\n    }\n\n    getDayNumber(offset) {\n        const day = this.getTimeRemaining() + offset;\n        let daySelected;;\n        if(document.getElementById('DayNum') !== null){\n            daySelected = document.getElementById('DayNum').innerHTML;\n        }\n        if (daySelected === day.toString()) {\n            return <u><b><i>{day}</i></b></u>;\n        } else {\n            return day;\n        }\n    }\n\n    render() {\n        return (\n            <div> \n                <details  id=\"TableDiv\" onClick={() => { this.get10DayAvg(); this.copyToClipboard(); this.get10DayDone() }}>\n                    <summary>Day #<u id=\"DayNum\">{ this.getTimeRemaining()}</u> | PM: {this.checkboxesCrossed()}/10 ▼</summary>\n                    10 day avg: <b id='lol'>calculating...</b> <br/><br/>\n\n                    <table  id=\"table\">\n                        <tr>\n                            <th></th>\n                            <th>{ this.getDayNumber(9) }</th>\n                            <th>{ this.getDayNumber(8) }</th>\n                            <th>{ this.getDayNumber(7) }</th>\n                            <th>{ this.getDayNumber(6) }</th>\n                            <th>{ this.getDayNumber(5) }</th>\n                            <th>{ this.getDayNumber(4) }</th>\n                            <th>{ this.getDayNumber(3) }</th>\n                            <th>{ this.getDayNumber(2) }</th>\n                            <th>{ this.getDayNumber(1) }</th>\n                            <th>{ this.getDayNumber(0) }</th>\n                        </tr>\n                        <tr>\n                            <td>Codecademy</td>\n                            <td>{this.getStatus('Codecademy', 9)}</td>\n                            <td>{this.getStatus('Codecademy', 8)}</td>\n                            <td>{this.getStatus('Codecademy', 7)}</td>\n                            <td>{this.getStatus('Codecademy', 6)}</td>\n                            <td>{this.getStatus('Codecademy', 5)}</td>\n                            <td>{this.getStatus('Codecademy', 4)}</td>\n                            <td>{this.getStatus('Codecademy', 3)}</td>\n                            <td>{this.getStatus('Codecademy', 2)}</td>\n                            <td>{this.getStatus('Codecademy', 1)}</td>\n                            <td>{this.getStatus('Codecademy', 0)}</td>\n\n                        </tr>\n                            <tr>\n                            <td>SDS</td>\n                            <td>{this.getStatus('SDS', 9)}</td>\n                            <td>{this.getStatus('SDS', 8)}</td>\n                            <td>{this.getStatus('SDS', 7)}</td>\n                            <td>{this.getStatus('SDS', 6)}</td>\n                            <td>{this.getStatus('SDS', 5)}</td>\n                            <td>{this.getStatus('SDS', 4)}</td>\n                            <td>{this.getStatus('SDS', 3)}</td>\n                            <td>{this.getStatus('SDS', 2)}</td>\n                            <td>{this.getStatus('SDS', 1)}</td>\n                            <td>{this.getStatus('SDS', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Sport</td>\n                            <td>{this.getStatus('Sport', 9)}</td>\n                            <td>{this.getStatus('Sport', 8)}</td>\n                            <td>{this.getStatus('Sport', 7)}</td>\n                            <td>{this.getStatus('Sport', 6)}</td>\n                            <td>{this.getStatus('Sport', 5)}</td>\n                            <td>{this.getStatus('Sport', 4)}</td>\n                            <td>{this.getStatus('Sport', 3)}</td>\n                            <td>{this.getStatus('Sport', 2)}</td>\n                            <td>{this.getStatus('Sport', 1)}</td>\n                            <td>{this.getStatus('Sport', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Obsidian</td>\n                            <td>{this.getStatus('Obsidian', 9)}</td>\n                            <td>{this.getStatus('Obsidian', 8)}</td>\n                            <td>{this.getStatus('Obsidian', 7)}</td>\n                            <td>{this.getStatus('Obsidian', 6)}</td>\n                            <td>{this.getStatus('Obsidian', 5)}</td>\n                            <td>{this.getStatus('Obsidian', 4)}</td>\n                            <td>{this.getStatus('Obsidian', 3)}</td>\n                            <td>{this.getStatus('Obsidian', 2)}</td>\n                            <td>{this.getStatus('Obsidian', 1)}</td>\n                            <td>{this.getStatus('Obsidian', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Read</td>\n                            <td>{this.getStatus('Read', 9)}</td>\n                            <td>{this.getStatus('Read', 8)}</td>\n                            <td>{this.getStatus('Read', 7)}</td>\n                            <td>{this.getStatus('Read', 6)}</td>\n                            <td>{this.getStatus('Read', 5)}</td>\n                            <td>{this.getStatus('Read', 4)}</td>\n                            <td>{this.getStatus('Read', 3)}</td>\n                            <td>{this.getStatus('Read', 2)}</td>\n                            <td>{this.getStatus('Read', 1)}</td>\n                            <td>{this.getStatus('Read', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Anki</td>\n                            <td>{this.getStatus('Anki', 9)}</td>\n                            <td>{this.getStatus('Anki', 8)}</td>\n                            <td>{this.getStatus('Anki', 7)}</td>\n                            <td>{this.getStatus('Anki', 6)}</td>\n                            <td>{this.getStatus('Anki', 5)}</td>\n                            <td>{this.getStatus('Anki', 4)}</td>\n                            <td>{this.getStatus('Anki', 3)}</td>\n                            <td>{this.getStatus('Anki', 2)}</td>\n                            <td>{this.getStatus('Anki', 1)}</td>\n                            <td>{this.getStatus('Anki', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Affirmation</td>\n                            <td>{this.getStatus('Affirmation', 9)}</td>\n                            <td>{this.getStatus('Affirmation', 8)}</td>\n                            <td>{this.getStatus('Affirmation', 7)}</td>\n                            <td>{this.getStatus('Affirmation', 6)}</td>\n                            <td>{this.getStatus('Affirmation', 5)}</td>\n                            <td>{this.getStatus('Affirmation', 4)}</td>\n                            <td>{this.getStatus('Affirmation', 3)}</td>\n                            <td>{this.getStatus('Affirmation', 2)}</td>\n                            <td>{this.getStatus('Affirmation', 1)}</td>\n                            <td>{this.getStatus('Affirmation', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td>Self-enquiry</td>\n                            <td>{this.getStatus('Self-Inquiry', 9)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 8)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 7)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 6)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 5)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 4)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 3)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 2)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 1)}</td>\n                            <td>{this.getStatus('Self-Inquiry', 0)}</td>\n                        </tr>\n                        <tr>\n                            <td><abbr title=\"One truthful sentence?\">Writing</abbr></td>\n                            <td>{this.getStatus('Writing', 9)}</td>\n                            <td>{this.getStatus('Writing', 8)}</td>\n                            <td>{this.getStatus('Writing', 7)}</td>\n                            <td>{this.getStatus('Writing', 6)}</td>\n                            <td>{this.getStatus('Writing', 5)}</td>\n                            <td>{this.getStatus('Writing', 4)}</td>\n                            <td>{this.getStatus('Writing', 3)}</td>\n                            <td>{this.getStatus('Writing', 2)}</td>\n                            <td>{this.getStatus('Writing', 1)}</td>\n                            <td>{this.getStatus('Writing', 0)}</td>\n                        </tr>\n                            <tr>\n                                <td>Contemplation</td>\n                                <td>{this.getStatus('Contemplation', 9)}</td>\n                                <td>{this.getStatus('Contemplation', 8)}</td>\n                                <td>{this.getStatus('Contemplation', 7)}</td>\n                                <td>{this.getStatus('Contemplation', 6)}</td>\n                                <td>{this.getStatus('Contemplation', 5)}</td>\n                                <td>{this.getStatus('Contemplation', 4)}</td>\n                                <td>{this.getStatus('Contemplation', 3)}</td>\n                                <td>{this.getStatus('Contemplation', 2)}</td>\n                                <td>{this.getStatus('Contemplation', 1)}</td>\n                                <td>{this.getStatus('Contemplation', 0)}</td>\n                            </tr>\n                    </table>\n                {/* <button>←</button>\n                <button>→</button> */}\n                </details>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // Paste your code here.\n        const oneSecond = 1000;\n        setInterval(() => {\n        this.setState({ date: new Date() });\n        }, oneSecond);\n    }\n}\n","import { collection, onSnapshot, getDoc, setDoc, doc, serverTimestamp, updateDoc } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {placeholder: 'Any ideas or To-dos?', text: ' ', dbName: \"ideas\", day: 0};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.placeholder;\n  }\n\n  handleChange(event) {    \n    this.setState({text: event.target.value});\n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    switch(dbName) {\n      case \"ideas\":\n        payload = {idea: this.state.text, timestamp: serverTimestamp(), hide: 0};\n        await setDoc(docRef, payload);\n        break;\n      case \"toDo\":\n        payload = {toDoItem: this.state.text, done: 0, timestamp: serverTimestamp()};\n        await setDoc(docRef, payload);\n        break;\n      case 'dayNote':\n        this.addDayNote();\n        break;\n    }\n    this.setState({text: ''});\n    this.setState({placeholder: 'Saved! Anything else?'});\n    \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n    this.setState({text: ''}); \n    this.setState({placeholder: `saving to: ${event.target.value}`}); \n\n    // document.querySelector('#notepad').value = \"\";\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async addDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    let payload;\n\n    payload = {note: this.state.text, timestamp: serverTimestamp()};\n    \n    await updateDoc(docRef, payload);\n  }\n\n  async getDayNote(day) {\n    document.getElementById('DayNum').innerHTML = this.getTimeRemaining()+day;\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()+day}`);\n    console.log('Daily note from Day #' + (this.getTimeRemaining()+day));\n    // console.log('Type is' + typeof (this.getTimeRemaining()+day));\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    let dayNote;\n    if(data !== undefined) {\n      dayNote = data.note;\n    }\n\n    console.log('Day note is: ' + dayNote);\n    dayNote = dayNote === undefined ? '🤔' : dayNote;\n\n    this.setState({placeholder: ''});\n    this.setState({text: dayNote});\n    document.querySelector('#notepad').value = dayNote;\n    // document.querySelector(\"//th[contains(.,'8496')]\").innerHtml = 'Nice';\n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <button onClick={() => {this.getDayNote(this.state.day + 1);this.setState({ day: this.state.day + 1}) }}>←</button>\n        <button onClick={() => {this.getDayNote(this.state.day - 1);this.setState({ day: this.state.day - 1}) }}>→</button><br />\n        {/* {this.getTimeRemaining()+this.state.day} */}\n\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> <br />\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n{/* \n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label> */}\n\n            <input onClick={() => this.getDayNote(0)} type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"dayNote\"/>\n            <label for=\"starred\">📝</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1, hide: 0};\n\n    setDoc(docRef, payload);\n  }\n\n  const hideDoneItem = async (toDoItem) => {\n    console.log(toDoItem.id)\n    const docRef = doc(db, \"toDo\", toDoItem.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='toDoList'>\n      <details open>\n      <summary><h2>✅ <b><u>To-do list:</u></b></h2></summary>\n\n        {\n          toDos.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n          ))\n        } \n        \n        </details>\n        \n        <br />\n\n      <details>\n        <summary>Done ▼</summary>\n        {\n          done.map(item => (\n            item.hide == 1 ? null : <div><input type=\"checkbox\" checked/> { item.toDoItem } <button onClick={() => hideDoneItem(item)}>×</button> </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n                <details>\n                  <summary>Important ▼</summary>\n                  What can I do today to 📈 my self-esteem?\n                  <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n                  <br/>\n                  ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n                </details> <br />\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n    getWeekNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log(days)\n        return days\n    }\n    getDayNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #{this.getWeekNumber()}</h3>\n            <h3>Day {this.getDayNumber()}</h3>\n            <button onClick={ () => this.getWeekNumber() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\n\nexport default function TranscendingSelf() {\n\n    const [data, setData] = useState([{ lesson: \"Loading...\", id: \"initial\"}]);\n\n    const collectionRef = collection(db, \"Transcending Self\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n    []\n    );\n\n    const getWeekNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor(1 + (total/(1000*60*60*24*7)) );\n        // console.log('days is: ' + total/1000/60/60/24/7)\n        console.log(days)\n        return days\n    }\n    const getDayNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        let days = Math.floor( total/(1000*60*60*24) % 7 );\n        \n        days = days === 0 ? 7 : days;\n        return days\n    }\n    // const parseData = () => {\n    //     const data = JSON.parse(data);\n    //     return data.id\n    // }\n    const printTask = () =>{\n        console.log()\n    }\n\n    const getWeekLesson = async () => {\n        // const docRef = doc(db, 'Transcending Self', `Week #${getWeekNumber()}`);\n        const docRef = doc(db, 'Transcending Self', `Lessons`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        // const data = await docSnapshot.data();\n        // console.log('data is: ' + JSON.stringify(data))\n        console.log('data is: ' + JSON.stringify(data.Lesson))\n        // setData({lesson: 'idk'})\n        // return data.id;\n        return JSON.stringify(data.Lesson)\n    }\n\n    const getURL = () => { \n        const URL = \"https://drive.google.com/file/d/0ByAPpaltspWtN0xwZlNTY20xMUU/view?mc_cid=c628049e12&mc_eid=1f0a85948e&resourcekey=0-Y-1JEd-nB1TdIbYLPgFY7g\";\n        return URL\n    }\n\n  return (\n    <div id='TranscendingSelf' style={{'border' : '1px solid white'}}>\n        <h3>Week #{getWeekNumber()}: <a href={getURL()} target=\"_blank\">     THE DISTINCTION BETWEEN SELF AND OTHER     </a> </h3> \n\n        {/* <details>\n            <summary><b><u>Day {getDayNumber()}:</u></b></summary>\n            <h1>{JSON.stringify(data)}</h1>\n            <button onClick={ () => getWeekLesson() }>Console log</button>\n        </details> */}\n\n        {/* {data.map(item => (<h2>{item[`Day #${getDayNumber()}`]}</h2> ))} */}\n        <b>WEEK'S WORK:</b> <br />\n        1. Observe the relationship between yourself and other (all that is not you). Pay\nattention to the specific ways you think about and relate to other. Hold in the\nbackground the question: What do I accomplish with that? Why?<br /><br />\n\n        2. See if you can recognize how your self is as defined by what it's not as it is by what it\nis.<br /><br />\n\n        3. From time to time, dwell on the fact that you do not seem to be the creator of reality --\nor even of your own existence -- and how this influences your experience of yourself,\nyour capacity, and your relationship to life (other).\n            <br /><br />\n\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\", hide: 0 }]);\n\n    const collectionRef = collection(db, \"ideas\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n      []\n    );\n\n  const hideIdea = async (idea) => {\n    console.log(idea)\n    const docRef = doc(db, \"ideas\", idea.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='Ideas'>\n      < br />\n      <details open>\n        <summary><b style={{fontSize : '2em'}}>💡<u> ideas:</u></b></summary>\n            {\n            data.map(item => (\n                item.hide == 0 ? <h3>{item.idea} <button onClick={() => hideIdea(item)}>×</button></h3> : null\n            ))\n        }\n      </details>\n\n\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nexport class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    // console.log('NEW DATE IS: ' + new Date());\n    // console.log('Time left lol: ' + total/(1000*60*60*24));\n    // const days = Math.floor( total/(1000*60*60*24) );\n    }\n\n    renderTime = ({ remainingTime }) => {\n        if (remainingTime === 0) {\n        return <div className=\"timer\">Too lale...</div>;\n        }\n    \n        return (\n        <div className=\"timer\">\n            <div className=\"text\">Remaining</div>\n            <div className=\"value\">{remainingTime}</div>\n            <div className=\"text\">seconds</div>\n        </div>\n        );\n    };\n\n    getAffirmation() {\n        return <div>Я силён</div>\n    }\n\n  render() {\n    return <div id=\"affirmationTimer\">\n            {/* <button>Start</button> 5:00<br/>{this.state.date.toLocaleTimeString()} */}\n            <CountdownCircleTimer\n                isPlaying\n                duration={300}\n                colors={[\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"]}\n                colorsTime={[10, 6, 3, 0]}\n                onComplete={() => ({ shouldRepeat: false, delay: 1 })}\n            >\n                {/* {renderTime} */}\n            { this.getAffirmation() }\n            </CountdownCircleTimer>\n        </div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase';\nimport { TS } from './TS';\nimport TranscendingSelf from './TranscendingSelf';\nimport Ideas from './Ideas';\nimport { Timer } from './Timer';\n\n\nexport class Remember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {checked: []};\n    // this.handleNew = this.handleNew.bind(this);\n    // this.handleChange = this.handleChange.bind(this); \n  }\n\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async getItemsDone() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    console.log('DATA IS: ' + JSON.stringify(data))\n    if (JSON.stringify(data) === undefined) {\n      this.addDayToFirebase();\n    } else {\n    const items = data.done;\n    this.setState({checked: items}); \n    return items;\n    }\n  }\n\n  isDone(item){\n    // const idk = await this.getItemsDone().toString.includes(item) ? 'checked' : ''\n    // const idk = await this.getItemsDone();\n    // console.log(this.state.checked)\n    const done = this.state.checked\n    console.log('DONE is: ' + done)\n    // console.log(lol)\n    // console.log(lol.includes('aa'))\n    // const checked = await done.includes(item) ? 'true' : 'false';\n    // console.log(`wtf why ${item} ` + checked)\n    // console.log(done)\n    return this.state.checked.includes(item)\n  }\n\n  // async wtf(){\n  //   // console.log('this.state.checked is ' + this.state.checked)\n  //   const items = await this.getItemsDone()\n  //   // console.log(items)\n  //   this.setState({checked: items}); \n  // }\n\n  async handleCheck(item){\n    this.setState(prevState => ({\n      checked: [...prevState.checked, item]\n    }))\n    this.updateDayInFirebase()\n  }\n\n  reset(){\n    this.setState({checked: []});\n    this.updateDayInFirebase(); \n  }\n\n    getTimeRemaining(){\n      const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n      const days = Math.floor( total/(1000*60*60*24) );\n      return days\n  }\n\n  checkboxesCrossed() {\n      let checkboxesCrossed = 0;\n      let itemsDone = this.itemsDone();\n\n      checkboxesCrossed = itemsDone.length;\n      \n      return checkboxesCrossed;\n  }\n\n  itemsDone() {\n      let itemsDone = [];\n\n      if(document.getElementById('Obsidian') !== null) {\n          let idk;\n          idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n          idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n          idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n          idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n          idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n          idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n          idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n          idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('Self-Inquiry') : null;\n          idk = document.getElementById('Writing').checked ? itemsDone.push('Writing') : null;\n          idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n      }\n      return itemsDone;\n  }\n\n  async addDayToFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await setDoc(docRef, payload);\n    }\n\n  async updateDayInFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await updateDoc(docRef, payload);\n    }\n\n\n  // async getItemsDone() {\n  //     const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n  //     const docSnapshot = await getDoc(docRef)\n  //     const data = docSnapshot.data();\n  //     console.log(data.done)\n  //     return data.done;\n  // }\n\n\n  render() {\n    return (\n        <div id=\"Remember\">\n          <details open>\n            <summary>◭ 💯%</summary>\n              ⭐ Switch to thoughts in English <br/><br/>\n\n              What can I do today to be satisfied with this day ending? <br/>\n\n              <input id='Codecademy' checked={this.isDone('Codecademy')} type=\"checkbox\" onChange={()=>{this.handleCheck('Codecademy')}} />👉<a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a>👈 <br/>\n              <input id='SDS' checked={this.isDone('SDS')} onChange={()=>{this.handleCheck('SDS')}} type=\"checkbox\"  /> SDS 🧘🏻‍♂️<br/>\n              <input id='Sport' checked={this.isDone('Sport')} onChange={()=>{this.handleCheck('Sport')}} type=\"checkbox\"  /> Sport 💪 <br/>\n              <input id='Obsidian' checked={this.isDone('Obsidian')} onChange={()=>{this.handleCheck('Obsidian')}} type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n              <input id='Read' checked={this.isDone('Read')} onChange={()=>{this.handleCheck('Read')}} type=\"checkbox\"  /> Read 📕<br/>\n              <input id='Anki' checked={this.isDone('Anki')} onChange={()=>{this.handleCheck('Anki')}} type=\"checkbox\"  /> Anki <br/>\n\n              <details>\n                <summary><input id='Affirmation' checked={this.isDone('Affirmation')} onChange={()=>{this.handleCheck('Affirmation')}} type=\"checkbox\"  /> Affirmation ▼ <br/></summary>\n                <marquee width=\"60%\" direction=\"left\" height=\"40px\" scrollamount=\"18\">\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free. I am powerful, I am capable, I am worthy, I am free.\n                  \n                  Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n                  Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n                  Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. Я кузнец своих нейронных путей. \n\n                  Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n                  Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n                  Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. Я люблю себя и принимаю таким, какой я есть. \n\n                  I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. \n                  I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. I choose to empower myself. \n\n\n                  I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n                  I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n                  I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others. I am completely independent of the good or the bad opinions of others.\n\n                  Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. \n                  Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. Всё будет хорошо. \n                </marquee>\n                <Timer />\n              </details>\n\n              <details>\n                <summary><input id='SelfInquiry' checked={this.isDone('Self-Inquiry')} onChange={()=>{this.handleCheck('Self-Inquiry')}} type=\"checkbox\"  /> Self-Inquiry ▼  <br/></summary>\n                Who am I? What am I? <br/>\n                <input type=\"text\" id=\"WhoIamInput\"></input> <br/>\n              </details>\n              <input id='Writing' checked={this.isDone('Writing')} onChange={()=>{this.handleCheck('Writing')}} type=\"checkbox\"  /><abbr title=\"~Honest externalization, so anyway... 🤔\">Writing</abbr><br/>\n              <input id='Contemplation' checked={this.isDone('Contemplation')} onChange={()=>{this.handleCheck('Contemplation')}} type=\"checkbox\"  /> Contemplation ↓<br/>\n              <button onClick={() => {this.reset()}}>reset</button>\n            </details> <br />\n\n\n            <TranscendingSelf />\n            <Ideas />\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getItemsDone();\n    document.addEventListener(\"keydown\", (e) => \n        e.code === \"Enter\" && alert('yeah well, but who is aware of ' + document.getElementById('WhoIamInput').value));\n    // this.wtf()\n    // setInterval(() => {\n    //   this.wtf() // can I leave this like this for sync or should I just // ok I guess this is necesasry lol\n    //   // this.setState({ date: new Date() }); \n    // }, 1500);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction Playground() {\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    useEffect(\n      () =>\n        onSnapshot(collection(db, \"SDSlog\"), (snapshot) =>\n          // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n          // console.log(snapshot.docs.map(doc => doc.data()))\n          setData(snapshot.docs.map(doc => doc.data()))\n        ),\n      []\n    );\n\n        return (\n            <div>\n                <h1>IDK</h1>\n                {data.map(item => (\n                    <h1>{item.idea}</h1>\n                ))}\n            </div>\n        )\n    }\n\nexport default Playground;","import React, { setState, useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, arrayUnion, updateDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\nimport tarot from '../Tarot/tarot.json';\nimport { Buttons } from '../Sandbox/Buttons';\n// import Toggle from 'react-native-toggle-element';\nimport ToggleTheme from \"react-toggle-theme\";\n\n\nexport default function Tarot() {\n\n    const [data, setData] = useState([{ colors: [\"Loading...\"]}]);\n    const [mode, setMode] = useState('new');\n    const [getOldCard, setOldCard] = useState('');\n    const [getNewCard, setNewCard] = useState('');\n\n    const [toggleValue, setToggleValue] = useState(false);\n    const [currentTheme, setCurrentTheme] = useState(\"light\");\n\n    const collectionRef = collection(db, \"Colors\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n            setData(snapshot.docs.map(doc => doc.data()))\n            ),\n        []\n    );\n\n    useEffect(\n      () => {\n          newCard();\n          // document.getElementById('cardImg').click()\n      }, []\n    )\n\n    const newCard = async () => {\n        const random = Math.floor(Math.random() * tarot.length + 1);\n        console.log('random num is: ' + random);\n\n        const docRef = doc(db, \"Tarot\", random.toString());\n        const cardInfo = await getDoc(docRef);\n\n        let card = cardInfo.data().card;\n        let cardOld = card;\n        setOldCard(card);\n        console.log('old card state is: ' + getOldCard)\n        const meaning = cardInfo.data().meaning;\n        console.log('meaning is: ' + meaning)\n\n        card = card.replace('Pents', 'Coins');\n\n        card = card.replace(/[1-9][0-9]_/, 'The');\n        card = card.replace(/[0-9]_/, 'The');\n\n        card = card.replace('11', 'Page');\n        card = card.replace('12', 'Knight');\n        card = card.replace('13', 'Queen');\n        card = card.replace('14', 'King');\n        card = card.replace('01', 'Ace');\n\n        card = card.includes('10') ? card : card.replace('0', '');\n        card = card.replace('TheHanged_Man', 'TheHangedMan');\n        // card = card.replace('Hierophant', 'TheHierophant');\n        // card = card.replace('World', 'TheWorld');\n        card = card.replace('TheHigh_Priestess', 'HighPriesess');\n        card = card.replace('TheWheel_of_Fortune', 'WheelOfFortune');\n        card = card.replace('TheJustice', 'Justice');\n        card = card.replace('TheJudgement', 'Judgement');\n        card = card.replace('TheDeath', 'Death');\n        card = card.replace('TheTemperance', 'Temperance');\n        card = card.replace('TheStrength', 'Strength');\n        card = card.replace('CupsQueen', 'queenscups');\n        card = card.replace('WandsKnight', 'KnightWands');\n        // card = card.replace('Hermit', 'TheHermit');\n        // card = card.replace('Tower', 'TheTower');\n        // card = card.replace('Devil', 'TheDevil');\n        // card = card.replace('Star', 'TheStar');\n        // card = card.replace('Sun', 'TheSun');\n        // card = card.replace('Empress', 'TheEmpress');\n\n        card = card.replace('SwordsKnight', 'KnightOfSwords');\n\n        setNewCard(card);\n        console.log('New card state is: ' + getNewCard);\n\n        // let oldStyle = document.getElementById(\"old\").checked\n        let oldStyle = currentTheme === \"dark\"\n        if (oldStyle) {\n          document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${cardOld}.jpg`;\n        } else {\n            document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/NFT/min/${card}.jpg`;\n        }\n\n        let cardSearch = card.replace(/[0-9]/, '');\n\n        cardSearch = cardSearch.replace('King', '');\n        cardSearch = cardSearch.replace('Knight', '');\n        cardSearch = cardSearch.replace('Queen', '');\n        cardSearch = cardSearch.replace('Page', '');\n\n        cardSearch = cardSearch.match(/[A-Z][a-z]+|[0-9]+/g).join(\"&nbsp;\")\n        console.log('cardSearch is: ' + cardSearch)\n        // console.log('this.chkbox is: ' + this.state.chkbox)\n        console.log('mode is: ' + mode)\n      \n\n        document.getElementById('card').innerHTML = `<a id=\"cardLink\" href=https://crypto.com/nft/marketplace?search=${cardSearch} target=\"_blank\">${'💲 Market 🔍'}</a>`;\n        document.getElementById('meaningTarot').innerHTML = meaning;\n    }\n\n    const editMeaning = () => {\n      var meaning = document.getElementById(\"meaningTarot\");\n      var saveButton = document.getElementById('saveButton');\n      \n      if (meaning.contentEditable == 'false') {\n        meaning.contentEditable = true;\n        meaning.style['text-decoration']='underline';\n        meaning.style.fontWeight = 'normal';\n        saveButton.innerHTML = '💾'\n      } else {\n        meaning.contentEditable = false;\n        meaning.style['text-decoration']='none';\n        meaning.style.fontWeight = 'bold';\n        saveButton.innerHTML = '✏️'\n      }\n    }\n\n\n    const setColor = (color) => {\n      document.body.style.backgroundColor = color;\n    }\n\n    const saveColor = async () => {\n      const docRef = doc(db, 'Colors', 'Tarot');\n      // const color = document.getElementById('colorName').innerText;\n      const color = document.body.style.backgroundColor ;\n      let payload = {colors: arrayUnion(color)};\n      \n      // console.log(data[0].colors);\n      // setState({colors: data[0].colors});\n      // console.log(this.state.colors)\n      // console.log(data.colors)\n      await updateDoc(docRef, payload);\n    }\n\n    const openSpoiler = () => {\n      document.getElementById('spoiler').open = 'true';\n    }\n\n    const changeMode = (mode) => {\n      setMode(mode)\n\n      console.log('old card state is: ' + getOldCard)\n      console.log('new card state is: ' + getNewCard)\n      \n      if (mode === 'old') {\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${getOldCard}.jpg`;\n      } else {\n          document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/NFT/min/${getNewCard}.jpg`;\n      }\n    }\n\n    const toggleMode = () => {\n      // if (mode === 'old') {\n      //   setMode('new')\n      // } else {\n      //   setMode('old')\n      // }\n      // // mode === 'old' ? setMode('new') : setMode('old');\n\n      // console.log('mode is: ' + mode)\n\n      if (currentTheme === 'light') {\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${getOldCard}.jpg`;\n      } else {\n          document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/NFT/min/${getNewCard}.jpg`;\n      }\n    }\n\n    const wtf = () => {\n      toggleMode();\n    }\n\n\n  return (\n    <div id='Tarot'><br />\n        <img id='cardImg' onClick={() => newCard()} src='https://willthisdofor.art/tarot/pics/tarotBack.jpg' alt=\"tarot\" /> <br /><br />\n        {/* <button class='button' onClick={() => newCard()}>new</button> */}\n        {/* <Buttons /> */}\n\n        <div id=\"answerButtons\">\n          <button onClick={openSpoiler} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n\n\n        <details id=\"spoiler\">\n          <summary>▼</summary> <br />\n          <h2 id=\"meaningTarot\" contenteditable=\"false\">idk</h2> <button id=\"saveButton\" onClick={ () => { editMeaning() }}>✏️</button>\n          <br /><br />\n          <h3 id=\"card\">idk</h3>\n        </details>\n        <br /><br />\n\n          {/* <form>\n            <input checked={mode === \"new\"} onClick={() => changeMode('new')} id=\"nft\" name=\"contact\" value=\"email\" type=\"radio\"></input>\n            <input checked={mode === \"old\"} onClick={() => changeMode('old')} id=\"old\" name=\"contact\" value=\"phone\"type=\"radio\"></input>\n          </form> */}\n\n          {/* <Toggle value={toggleValue} onPress={(val) => setToggleValue(val)} /> */}\n          <div onClick={() => toggleMode()}>\n            <ToggleTheme id=\"checkboxTogglerLol\" selectedTheme={currentTheme} onChange={setCurrentTheme}/>\n            <input type=\"checkbox\" id=\"checkboxTogglerLol\" />\n          </div>\n\n        <br /><br />\n        {   \n            data['0'].colors.map((color, index) => (\n              <button onClick={() => setColor(color)} style={{backgroundColor: color}} key={index}>⠀</button>\n            ))\n        }\n          {/* <button><u id=\"colorName\">#9A9CA7 </u></button> */}\n        <button onClick={() => saveColor()}>💾</button>\n    </div> \n  );\n}\n\n","import React from 'react';\n\nexport class Goals extends React.Component {\n    // handleIdea() {\n    //     const newTime = new Date()\n\n    //     let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n    //     if (idea != null && idea != \"\") {   \n    //       fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n    //     }\n    //   }\n\n  render() {\n    return (\n        <div style={{'border' : '1px solid white', 'margin-left' : '10px'}} id=\"Goals\">\n            <h1><u>Goals</u></h1>\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >💲⚙️💱  while 🧘‍♂️</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Go to USA 🇺🇸</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a black belt 🥋</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a Ph.D in AI</h2><br />\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get Enlightened 👁️</h2><br />\n            {/* <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Learn Swift</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Learn React & NodeJS</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Ralston's CAP while it's possible...</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Own 1 share of Tesla</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Buy <a href=\"http://TheCosmicJoke.com\" target=\"_blank\">TheCosmicJoke.com</a></h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Travel the world ✈️</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Fill my ISI with Xenon</h2><br /> */}\n\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ColorPicker from \"./ColorPicker\";\nimport { Stocks } from \"./Stocks\";\nimport { Buttons } from \"./Buttons\";\nimport { Chemistry } from \"./Chemistry\";\nimport { Counter } from \"./Counter\";\nimport { Notepad } from \"./Notepad\";\nimport { Motivation } from \"./Motivation\";\nimport Pfive from \"./Pfive\";\nimport Squares from \"./Squares\";\nimport { EjaculationTimer } from \"./EjaculationTimer\";\nimport { TS } from \"./TS\";\nimport { Remember } from \"./ Remember\";\nimport { VisionBoard } from \"./Vision Board\";\nimport { RandomIdea } from \"./RandomIdea\";\nimport Playground from \"./Playground\";\nimport Ideas from \"./Ideas\";\nimport Tarot from \"../Tarot/Tarot\";\nimport { Goals } from \"./Goals\";\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <Goals />\n            {/* <RandomIdea /> */}\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        {/* <Pfive />\n        <Squares /> */}\n        {/* <Tarot /> */}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","// Whatever, idk\nimport { Link } from \"react-router-dom\";\nimport React, { setState, useState, useEffect } from 'react';\n\n\nexport const Footer = () => {\n\n    const randomColor = () => {\n        var color = '#';\n        var letters = '0123456789ABCDEF';\n        \n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        console.log(color);\n        document.body.style.backgroundColor = color;\n        // document.getElementById(\"colorName\").innerText = color;\n    }\n\n    useEffect(\n        () => {\n            randomColor();\n        }\n    )\n    \n\n  return (\n    <div id=\"footer\">\n      <br />\n      <Link to=\"/build\">Dashboard</Link>   | \n      <Link to=\"/tarot\">Tarot</Link>   | \n      <Link to=\"/chemistry\">Chemistry</Link> |\n      <Link to=\"/stocks\">Stocks</Link> |\n      <Link to=\"/whatEats\">WhatEats</Link> |\n      <Link to=\"/dreams\">Dreams</Link> |\n      <br />\n      <br />\n      <button onClick={() => randomColor()}>Random color</button>\n    </div>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport React, { setState, useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, arrayUnion, updateDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\n\nexport const Dreams = () => {\n\n  const [data, setData] = useState([{ Keywords: [\"Loading...\"]}]);\n\n  const collectionRef = collection(db, \"Dreams\");\n\n  const q = query(collectionRef);\n\n  useEffect(() => \n      onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => doc.data()))\n          ),\n      []\n  );\n\n    const randomKeyword = () => {\n        console.log(data[0].Keywords[1]);\n        const randomNum = Math.floor(Math.random() * data[0].Keywords.length);\n        const word = data[0].Keywords[randomNum]\n        // document.getElementById('randomKeyword').innerHTML = word;\n        return word;\n    }\n\n    const saveKeyword = async (keyword) => {\n      const docRef = doc(db, 'Dreams', 'Keywords');\n      // const color = document.getElementById('colorName').innerText;\n      const color = document.body.style.backgroundColor ;\n      let payload = {Keywords: arrayUnion(keyword )};\n      \n      // console.log(data[0].colors);\n      // setState({colors: data[0].colors});\n      // console.log(this.state.colors)\n      // console.log(data.colors)\n      await updateDoc(docRef, payload);\n    }\n\n    const setNewRandomKeyword = () => {\n      const randomNum = Math.floor(Math.random() * data[0].Keywords.length);\n      const word = data[0].Keywords[randomNum]\n      document.getElementById('randomKeyword').innerHTML = word;\n    }\n\n  return (\n    <div id=\"dreams\">\n        <br />\n        <h1>Did you dream of <u id=\"randomKeyword\">{randomKeyword()}</u> ? </h1>\n\n      <button onClick={() => setNewRandomKeyword()}>Next</button>\n\n\n      <br /><br />\n      <input id=\"keyword\" type=\"text\" placeholder=\"Add keyword\" onSubmit={() => saveKeyword()}/> <button onClick={() => saveKeyword(document.getElementById('keyword').value)}>💾</button> <br /><br />\n      list of keywords: \n\n      {   \n            data['0'].Keywords.map((keyword, index) => (\n              <li key={index}>{keyword}</li>\n            ))\n        }\n    </div>\n  );\n};\n","import { Link } from \"react-router-dom\";\n\nexport const WhatEats = () => {\n\n    const randomKeyword = () => {\n        return 'idk'\n    }\n\n  return (\n    <div id=\"whatEats\">\n      <h1>So, what to eat?</h1>\n      <img src=\"https://i.redd.it/ga8ce2xiljr21.jpg\" alt=\"food\" />\n    </div>\n  );\n};\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Contact } from \"./Contact\";\nimport { Sandbox } from \"./Sandbox/Sandbox\";\nimport { Clock } from \"./Sandbox/Clock\";\nimport { Helmet } from \"react-helmet\";\nimport React, { useEffect, useState } from \"react\";\nimport db from \"./Sandbox/firebase\";\nimport moment from \"moment\";\nimport Tarot from \"./Tarot/Tarot\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Chemistry } from \"./Sandbox/Chemistry\";\nimport { Footer } from \"./Sandbox/Footer\";\nimport { Stocks } from \"./Sandbox/Stocks\";\nimport ColorPicker from \"./Sandbox/ColorPicker\";\nimport { Dreams } from \"./Sandbox/Dreams\";\nimport { WhatEats } from \"./Sandbox/WhatEats\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Helmet>\n          <meta\n            http-equiv=\"Content-Security-Policy\"\n            content=\"upgrade-insecure-requests\"\n          />\n          {/* <title>My Title</title> */}\n          {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n        </Helmet>\n        <Switch>\n          <Route path=\"/tarot\">\n            <Tarot />\n          </Route>\n\n          <Route path=\"/chemistry\">\n            <ColorPicker />\n          </Route>\n\n          <Route path=\"/stocks\">\n            <Stocks />\n          </Route>\n\n          <Route path=\"/dreams\">\n            <Dreams />\n          </Route>\n\n          <Route path=\"/whatEats\">\n            <WhatEats />\n          </Route>\n\n          <Route path=\"/\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Contact />\n              <Clock />\n            </header>\n            <Tarot />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}