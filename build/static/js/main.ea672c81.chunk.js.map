{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Counter.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/Pfive.js","Sandbox/Squares.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/TranscendingSelf.js","Sandbox/Ideas.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Playground.js","Tarot/Tarot.js","Sandbox/Goals.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Counter","total","Date","parse","checkboxesCrossed","itemsDone","length","document","getElementById","checked","push","a","day","getTimeRemaining","docRef","doc","db","toString","payload","PM","done","timestamp","serverTimestamp","setDoc","getDoc","docSnapshot","i","JSON","stringify","undefined","innerHTML","get10DayAvg","setInterval","date","Notepad","placeholder","dbName","handleNew","handleChange","event","moment","idea","hide","toDoItem","addDayNote","note","updateDoc","dayNote","contenteditable","autocomplete","getText","setDatabaseName","name","for","getDayNote","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","hideDoneItem","open","item","Motivation","Pfive","setup","p5","canvasParentRef","createCanvas","parent","draw","xPos","yPos","size","fill","circle","Squares","background","translate","width","height","x","y","strokeWeight","rotate","radians","frameCount","rect","EjaculationTimer","axios","get","then","response","time","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","incrementSeconds","TranscendingSelf","lesson","setData","collectionRef","q","snapshot","getDayNumber","getWeekLesson","Lesson","getWeekNumber","Lesson11","Ideas","hideIdea","fontSize","Remember","addDayToFirebase","items","includes","updateDayInFirebase","isDone","handleCheck","getItemsDone","VisionBoard","visionBoard","alt","Playground","Tarot","card","newCard","tarot","cardInfo","meaning","saveButton","contentEditable","fontWeight","editMeaning","Goals","Sandbox","Contact","password","authorized","authorize","auth","shrek","display","title","login","removeSpinner","Clock","toLocaleTimeString","App","Helmet","content","path","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea672c81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import db from './firebase';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\n\nexport class Counter extends React.Component {\n    getTimeRemaining(){\n        const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n        // console.log('NEW DATE IS: ' + new Date());\n        // console.log('Time left lol: ' + total/(1000*60*60*24));\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n\n    checkboxesCrossed() {\n        let checkboxesCrossed = 0;\n        let itemsDone = this.itemsDone();\n            \n        checkboxesCrossed = itemsDone.length;\n\n        return checkboxesCrossed;\n    }\n\n    itemsDone() {\n        let itemsDone = [];\n\n        if(document.getElementById('Obsidian') !== null) {\n            let idk;\n            idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n            idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n            idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n            idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n            idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n            idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n            idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n            idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('SelfInquiry') : null;\n            idk = document.getElementById('MarxCapital').checked ? itemsDone.push('MarxCapital') : null;\n            idk = document.getElementById('Contemplation').checked ? itemsDone.push('MarxCapital') : null;\n        }\n        return itemsDone;\n    }\n\n    async addDayToFirebase() {\n        const day = this.getTimeRemaining();\n        const docRef = doc(db, 'Days', `#${day.toString()}`);\n        let payload;\n\n        payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n    \n        await setDoc(docRef, payload);\n      }\n\n\n    async getItemsDone() {\n        const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        console.log(data.done)\n        return data.done;\n    }\n\n    async get10DayAvg() {\n        let total = 0;\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                total += data.PM;\n            }\n        }\n        console.log(`Total: ${total}`)\n        document.getElementById('lol').innerHTML = total/10;\n        return '4';\n    }\n\n    render() {\n        return (\n            <div> \n                <details onClick={() => { this.get10DayAvg() }}>\n                    <summary>Day #<u>{ this.getTimeRemaining()}</u> | PM: {this.checkboxesCrossed()}/10 ▼</summary>\n                    10 day avg: <b id='lol'>calculating...</b>\n                    {/* <button onClick={this.get10DayAvg}>Get 10 day avg</button> */}\n                </details>            \n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // Paste your code here.\n        const oneSecond = 1000;\n        setInterval(() => {\n        this.setState({ date: new Date() });\n        }, oneSecond);\n    }\n}\n","import { collection, onSnapshot, getDoc, setDoc, doc, serverTimestamp, updateDoc } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {placeholder: 'Any ideas or To-dos?', text: ' ', dbName: \"ideas\"};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.placeholder;\n  }\n\n  handleChange(event) {    \n    this.setState({text: event.target.value});\n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    switch(dbName) {\n      case \"ideas\":\n        payload = {idea: this.state.text, timestamp: serverTimestamp(), hide: 0};\n        await setDoc(docRef, payload);\n        break;\n      case \"toDo\":\n        payload = {toDoItem: this.state.text, done: 0, timestamp: serverTimestamp()};\n        await setDoc(docRef, payload);\n        break;\n      case 'dayNote':\n        this.addDayNote();\n        break;\n    }\n    this.setState({text: ''});\n    this.setState({placeholder: 'Saved! Anything else?'});\n    \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n    this.setState({text: ''}); \n    this.setState({placeholder: `saving to: ${event.target.value}`}); \n\n    // document.querySelector('#notepad').value = \"\";\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async addDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    let payload;\n\n    payload = {note: this.state.text, timestamp: serverTimestamp()};\n    \n    await updateDoc(docRef, payload);\n  }\n\n  async getDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    let dayNote = data.note;\n\n    console.log('Day note is: ' + dayNote);\n    dayNote = dayNote === undefined ? '🤔' : dayNote;\n\n    this.setState({placeholder: ''});\n    this.setState({text: dayNote});\n    document.querySelector('#notepad').value = dayNote;\n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> <br />\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n{/* \n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label> */}\n\n            <input onClick={() => this.getDayNote()} type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"dayNote\"/>\n            <label for=\"starred\">📝</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1, hide: 0};\n\n    setDoc(docRef, payload);\n  }\n\n  const hideDoneItem = async (toDoItem) => {\n    console.log(toDoItem.id)\n    const docRef = doc(db, \"toDo\", toDoItem.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='toDoList'>\n      <details open>\n      <summary><h2>✅ <b><u>To-do list:</u></b></h2></summary>\n\n        {\n          toDos.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n          ))\n        } \n        \n        </details>\n        \n        <br />\n\n      <details>\n        <summary>Done ▼</summary>\n        {\n          done.map(item => (\n            item.hide == 1 ? null : <div><input type=\"checkbox\" checked/> { item.toDoItem } <button onClick={() => hideDoneItem(item)}>×</button> </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n                <details>\n                  <summary>Important ▼</summary>\n                  What can I do today to 📈 my self-esteem?\n                  <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n                  <br/>\n                  ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n                </details> <br />\n\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Pfive = function() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 400).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    let xPos = p5.random(500); // Generate random number between 0 and width\n    let yPos = p5.random(400); // Generate random number between 0 and height\n    let size = p5.random(10, 101); // Generate random number between 10 and 100\n\n    p5.fill(p5.random(256), p5.random(256), p5.random(256));\n    p5.circle(xPos, yPos, size);\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Pfive;\n","import React from 'react'\nimport Sketch from 'react-p5'\n\nconst Squares = function() {\n  const width = 500;\n  const height = 400;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef)\n    // p5.createCanvas(displayWidth, displayHeight);\n  }\n  \n  const draw = p5 => {\n    p5.background(0);\n\n    // Moves rectangle to center of canvas\n    p5.translate(width / 2, height / 2);\n\n    // Creates multiple rotating rectangles\n    for (let x = 500; x > 0; x -= 5) {\n        // Makes height the same as width so it's a square\n        let y = x;\n        p5.strokeWeight(0.5);\n        p5.rotate(p5.radians(p5.frameCount / 50));\n        p5.fill(255, x, 255);\n        p5.rect(0, 0, x, y);\n    }\n  }\n  \n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default Squares;\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n    getWeekNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log(days)\n        return days\n    }\n    getDayNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #{this.getWeekNumber()}</h3>\n            <h3>Day {this.getDayNumber()}</h3>\n            <button onClick={ () => this.getWeekNumber() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\n\nexport default function TranscendingSelf() {\n\n    const [data, setData] = useState([{ lesson: \"Loading...\", id: \"initial\"}]);\n\n    const collectionRef = collection(db, \"Transcending Self\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n    []\n    );\n\n    const getWeekNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor(1 + (total/(1000*60*60*24*7)) );\n        // console.log('days is: ' + total/1000/60/60/24/7)\n        console.log(days)\n        return days\n    }\n    const getDayNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n    // const parseData = () => {\n    //     const data = JSON.parse(data);\n    //     return data.id\n    // }\n    const printTask = () =>{\n        console.log()\n    }\n\n    const getWeekLesson = async () => {\n        // const docRef = doc(db, 'Transcending Self', `Week #${getWeekNumber()}`);\n        const docRef = doc(db, 'Transcending Self', `Week #11`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        // const data = await docSnapshot.data();\n        // console.log('data is: ' + JSON.stringify(data))\n        console.log('data is: ' + JSON.stringify(data.Lesson))\n        // setData({lesson: 'idk'})\n        // return data.id;\n        return JSON.stringify(data.Lesson)\n    }\n\n  return (\n    <div id='TranscendingSelf' style={{'border' : '1px solid white'}}>\n        <h3>Week #{getWeekNumber()}: {data.map(item => (<text>{item.Lesson11}</text> )) }</h3> \n\n        <details>\n            <summary><b><u>Day {getDayNumber()}:</u></b></summary>\n            <h1>{JSON.stringify(data)}</h1>\n            <button onClick={ () => getWeekLesson() }>Console log</button>\n        </details>\n\n        {data.map(item => (<h2>{item[`Day #${getDayNumber()}`]}</h2> ))}\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\", hide: 0 }]);\n\n    const collectionRef = collection(db, \"ideas\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n      []\n    );\n\n  const hideIdea = async (idea) => {\n    console.log(idea)\n    const docRef = doc(db, \"ideas\", idea.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='Ideas'>\n      < br />\n      <details open>\n        <summary><b style={{fontSize : '2em'}}>💡<u> ideas:</u></b></summary>\n            {\n            data.map(item => (\n                item.hide == 0 ? <h3>{item.idea} <button onClick={() => hideIdea(item)}>×</button></h3> : null\n            ))\n        }\n      </details>\n\n\n    </div>\n  );\n}\n\n","import { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase';\nimport { TS } from './TS';\nimport TranscendingSelf from './TranscendingSelf';\nimport Ideas from './Ideas';\n\n\nexport class Remember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {checked: []};\n    // this.handleNew = this.handleNew.bind(this);\n    // this.handleChange = this.handleChange.bind(this); \n  }\n\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async getItemsDone() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    console.log('DATA IS: ' + JSON.stringify(data))\n    if (JSON.stringify(data) === undefined) {\n      this.addDayToFirebase();\n    } else {\n    const items = data.done;\n    this.setState({checked: items}); \n    return items;\n    }\n  }\n\n  isDone(item){\n    // const idk = await this.getItemsDone().toString.includes(item) ? 'checked' : ''\n    // const idk = await this.getItemsDone();\n    // console.log(this.state.checked)\n    const done = this.state.checked\n    console.log('DONE is: ' + done)\n    // console.log(lol)\n    // console.log(lol.includes('aa'))\n    // const checked = await done.includes(item) ? 'true' : 'false';\n    // console.log(`wtf why ${item} ` + checked)\n    // console.log(done)\n    return this.state.checked.includes(item)\n  }\n\n  // async wtf(){\n  //   // console.log('this.state.checked is ' + this.state.checked)\n  //   const items = await this.getItemsDone()\n  //   // console.log(items)\n  //   this.setState({checked: items}); \n  // }\n\n  async handleCheck(item){\n    this.setState(prevState => ({\n      checked: [...prevState.checked, item]\n    }))\n    this.updateDayInFirebase()\n  }\n\n  reset(){\n    this.setState({checked: []});\n    this.updateDayInFirebase(); \n  }\n\n    getTimeRemaining(){\n      const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n      const days = Math.floor( total/(1000*60*60*24) );\n      return days\n  }\n\n  checkboxesCrossed() {\n      let checkboxesCrossed = 0;\n      let itemsDone = this.itemsDone();\n\n      checkboxesCrossed = itemsDone.length;\n      \n      return checkboxesCrossed;\n  }\n\n  itemsDone() {\n      let itemsDone = [];\n\n      if(document.getElementById('Obsidian') !== null) {\n          let idk;\n          idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n          idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n          idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n          idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n          idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n          idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n          idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n          idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('Self-Inquiry') : null;\n          idk = document.getElementById('MarxCapital').checked ? itemsDone.push('MarxCapital') : null;\n          idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n      }\n      return itemsDone;\n  }\n\n  async addDayToFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await setDoc(docRef, payload);\n    }\n\n  async updateDayInFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await updateDoc(docRef, payload);\n    }\n\n\n  // async getItemsDone() {\n  //     const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n  //     const docSnapshot = await getDoc(docRef)\n  //     const data = docSnapshot.data();\n  //     console.log(data.done)\n  //     return data.done;\n  // }\n\n\n  render() {\n    return (\n        <div id=\"Remember\">\n          <details open>\n            <summary>◭ 💯%</summary>\n              ⭐ Switch to thoughts in English <br/><br/>\n\n              What can I do today to be satisfied with this day ending? <br/>\n\n              <input id='Codecademy' checked={this.isDone('Codecademy')} type=\"checkbox\" onChange={()=>{this.handleCheck('Codecademy')}} /> <a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a> <br/>\n              <input id='SDS' checked={this.isDone('SDS')} onChange={()=>{this.handleCheck('SDS')}} type=\"checkbox\"  /> SDS <br/>\n              <input id='Sport' checked={this.isDone('Sport')} onChange={()=>{this.handleCheck('Sport')}} type=\"checkbox\"  /> Sport <br/>\n              <input id='Obsidian' checked={this.isDone('Obsidian')} onChange={()=>{this.handleCheck('Obsidian')}} type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n              <input id='Read' checked={this.isDone('Read')} onChange={()=>{this.handleCheck('Read')}} type=\"checkbox\"  /> Read <br/>\n              <input id='Anki' checked={this.isDone('Anki')} onChange={()=>{this.handleCheck('Anki')}} type=\"checkbox\"  /> Anki <br/>\n              <input id='Affirmation' checked={this.isDone('Affirmation')} onChange={()=>{this.handleCheck('Affirmation')}} type=\"checkbox\"  /> Affirmation  <br/>\n              <input id='SelfInquiry' checked={this.isDone('Self-Inquiry')} onChange={()=>{this.handleCheck('Self-Inquiry')}} type=\"checkbox\"  /> Self-Inquiry  <br/>\n              <input id='MarxCapital' checked={this.isDone('MarxCapital')} onChange={()=>{this.handleCheck('MarxCapital')}} type=\"checkbox\"  /> Marx Capital  <br/>\n              <input id='Contemplation' checked={this.isDone('Contemplation')} onChange={()=>{this.handleCheck('Contemplation')}} type=\"checkbox\"  /> Contemplation <br/>\n              <button onClick={() => {this.reset()}}>reset</button>\n            </details> <br />\n\n\n            <TranscendingSelf />\n            <Ideas />\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getItemsDone();\n    // this.wtf()\n    // setInterval(() => {\n    //   this.wtf() // can I leave this like this for sync or should I just // ok I guess this is necesasry lol\n    //   // this.setState({ date: new Date() }); \n    // }, 1500);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction Playground() {\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    useEffect(\n      () =>\n        onSnapshot(collection(db, \"SDSlog\"), (snapshot) =>\n          // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n          // console.log(snapshot.docs.map(doc => doc.data()))\n          setData(snapshot.docs.map(doc => doc.data()))\n        ),\n      []\n    );\n\n        return (\n            <div>\n                <h1>IDK</h1>\n                {data.map(item => (\n                    <h1>{item.idea}</h1>\n                ))}\n            </div>\n        )\n    }\n\nexport default Playground;","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\nimport tarot from '../Tarot/tarot.json';\n\n\nexport default function Tarot() {\n\n    const [data, setData] = useState([{ card: \"Loading...\", id: \"initial\" }]);\n\n    const collectionRef = collection(db, \"Tarot\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n            setData(snapshot.docs.map(doc => doc.data()))\n            ),\n        []\n    );\n\n    const newCard = async () => {\n        const random = Math.floor(Math.random() * tarot.length + 1);\n        console.log('random num is: ' + random);\n\n        const docRef = doc(db, \"Tarot\", random.toString());\n        const cardInfo = await getDoc(docRef);\n\n        const card = cardInfo.data().card;\n        console.log('card is: ' + card)\n        const meaning = cardInfo.data().meaning;\n        console.log('meaning is: ' + meaning)\n\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${card}.jpg`;\n        document.getElementById('card').innerHTML = card;\n        document.getElementById('meaningTarot').innerHTML = meaning;\n    }\n\n    const editMeaning = () => {\n      var meaning = document.getElementById(\"meaningTarot\");\n      var saveButton = document.getElementById('saveButton');\n      \n      if (meaning.contentEditable == 'false') {\n        meaning.contentEditable = true;\n        meaning.style['text-decoration']='underline';\n        meaning.style.fontWeight = 'normal';\n        saveButton.innerHTML = '💾'\n      } else {\n        meaning.contentEditable = false;\n        meaning.style['text-decoration']='none';\n        meaning.style.fontWeight = 'bold';\n        saveButton.innerHTML = '✏️'\n      }\n    }\n\n\n  return (\n    <div id='Tarot'>\n      <h1><u>Tarot</u></h1>\n        <img id='cardImg' onClick={() => newCard()} src='https://willthisdofor.art/tarot/pics/4_Emperor.jpg' alt=\"tarot\" /> <br />\n        {/* <button class='button' onClick={() => newCard()}>new</button> */}\n        <h1 id=\"card\">idk</h1>\n        <details open>\n          <summary>▼</summary> <br />\n          <h2 id=\"meaningTarot\" contenteditable=\"false\">idk</h2> <button id=\"saveButton\" onClick={ () => { editMeaning() }}>✏️</button>\n        </details>\n        <br /><br /><br /><br />\n\n    </div> \n  );\n}\n\n","import React from 'react';\n\nexport class Goals extends React.Component {\n    // handleIdea() {\n    //     const newTime = new Date()\n\n    //     let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n    //     if (idea != null && idea != \"\") {   \n    //       fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n    //     }\n    //   }\n\n  render() {\n    return (\n        <div style={{'border' : '1px solid white', 'margin-left' : '10px'}} id=\"Goals\">\n            <h1><u>Goals</u></h1>\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Own 1 share of Tesla</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Go to USA 🇺🇸</h2><br />\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorPicker from './ColorPicker';\nimport { Stocks } from './Stocks';\nimport { Buttons } from './Buttons'\nimport { Chemistry } from './Chemistry';\nimport { Counter } from './Counter';\nimport { Notepad } from './Notepad';\nimport { Motivation } from './Motivation';\nimport Pfive from './Pfive';\nimport Squares from './Squares';\nimport { EjaculationTimer } from './EjaculationTimer';\nimport { TS } from './TS';\nimport { Remember } from './ Remember';\nimport { VisionBoard } from './Vision Board';\nimport { RandomIdea } from './RandomIdea';\nimport  Playground from './Playground';\nimport Ideas from './Ideas';\nimport Tarot from '../Tarot/Tarot';\nimport { Goals } from './Goals';\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <Goals />\n            {/* <RandomIdea /> */}\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        <Pfive />\n        <Squares />\n        {/* <Tarot /> */}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport { Contact } from './Contact';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport { Clock } from './Sandbox/Clock';\nimport { Helmet } from 'react-helmet';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './Sandbox/firebase';\nimport moment from 'moment';\nimport Tarot from './Tarot/Tarot';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" />\n        {/* <title>My Title</title> */}\n        {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n      </Helmet>\n\n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Contact />\n              <Clock />\n            </header>\n            <Tarot />\n          </Route>\n          <Route path=\"/tarot\">\n            <Tarot />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}