{"version":3,"sources":["logo.svg","Sandbox/Chemistry.js","Sandbox/ColorPicker.js","Sandbox/Stocks.js","Sandbox/Buttons.js","Sandbox/firebase.js","Sandbox/Counter.js","Sandbox/Notepad.js","Sandbox/Todolist.js","Sandbox/Motivation.js","Sandbox/EjaculationTimer.js","Sandbox/TS.js","Sandbox/TranscendingSelf.js","Sandbox/Ideas.js","Sandbox/ Remember.js","img/VisionBoard.png","Sandbox/Vision Board.js","Sandbox/RandomIdea.js","Sandbox/Playground.js","Tarot/Tarot.js","Sandbox/Goals.js","Sandbox/Sandbox.js","Sandbox/shrek.png","Contact.js","Sandbox/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Chemistry","require","props","state","src","chemical","setChemical","bind","getRandomChemical","randomNum","Math","floor","random","chemicalName","chemicals","Lysergamides","console","log","this","setState","e","query","target","querySelector","value","preventDefault","id","href","action","onSubmit","type","defaultValue","onChange","text","onClick","React","Component","colorNames","ColorPicker","useState","color","setColor","divStyle","backgroundColor","style","map","colorName","Stocks","num","company","symbol","price","marketCap","sector","industry","setRandomNum","data","replace","abbreviation","Symbol","split","Sector","Industry","class","getFirestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Counter","total","Date","parse","checkboxesCrossed","itemsDone","length","document","getElementById","checked","push","a","day","getTimeRemaining","docRef","doc","db","toString","payload","PM","done","timestamp","serverTimestamp","setDoc","getDoc","docSnapshot","i","JSON","stringify","undefined","innerHTML","navigator","clipboard","writeText","get10DayAvg","copyToClipboard","setInterval","date","Notepad","placeholder","dbName","handleNew","handleChange","event","moment","idea","hide","toDoItem","addDayNote","note","updateDoc","dayNote","contenteditable","autocomplete","getText","setDatabaseName","name","for","getDayNote","className","ToDoList","toDos","setTodo","setDoneTodos","toDosCollectionRef","collection","qTodo","orderBy","qDone","where","useEffect","onSnapshot","snapshotTodo","docs","snapshotDone","setDone","timestampDone","hideDoneItem","open","item","Motivation","EjaculationTimer","axios","get","then","response","time","lastTime","reload","reset","nowMoment","last","d","duration","diff","days","hours","minutes","seconds","prevState","newTime","prompt","fetch","getTimePassed","incrementSeconds","TranscendingSelf","lesson","setData","collectionRef","q","snapshot","getWeekNumber","Lesson13","Ideas","hideIdea","fontSize","Remember","addDayToFirebase","items","includes","updateDayInFirebase","isDone","handleCheck","getItemsDone","VisionBoard","visionBoard","alt","Playground","Tarot","card","newCard","tarot","cardInfo","meaning","saveButton","contentEditable","fontWeight","editMeaning","randomColor","Goals","Sandbox","Contact","password","authorized","authorize","auth","shrek","display","title","login","removeSpinner","Clock","toLocaleTimeString","App","Helmet","content","path","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86a55df2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport chemicals from './chemicals.json';\nconst axios = require('axios');\n\n\nexport class Chemistry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: \"https://psychonautwiki.org/w/thumb.php?f=DMT.svg&width=960\",\n            chemical: \"DMT\"      \n        };\n  \n        this.setChemical = this.setChemical.bind(this) \n        this.getRandomChemical = this.getRandomChemical.bind(this) \n      }\n\n      getRandomChemical(){\n        const randomNum = Math.floor(Math.random()*650);\n        const chemicalName = chemicals[randomNum].Lysergamides;\n        console.log(chemicalName)\n        console.log(`https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`)\n        this.setState({\n            chemical: chemicalName,\n            src: `https://psychonautwiki.org/w/thumb.php?f=${chemicalName}.svg&width=960`\n        })\n        // console.log('AAAAAaaaaaaaaaaa' + document.getElementById('imgChemical'))\n      }\n\n      setChemical(e){\n        const query = e.target.querySelector(\n            'input[type=\"chemical\"]').value;\n        this.setState({\n            src: `https://psychonautwiki.org/w/thumb.php?f=${query}.svg&width=960`\n        })\n        e.target.querySelector('input[type=\"chemical\"]').value = query;\n        e.preventDefault();\n      }\n\n    render() {\n        return (\n            <div id=\"chemistry\">\n                <img id=\"imgChemical\" src={this.state.src}/> <br />\n\n                <a id=\"chemical\"\n                    href={'https://psychonautwiki.org/wiki/'+this.state.chemical}\n                    target=\"_blank\" >{this.state.chemical}</a> <br />\n\n                <form action=\"#\" onSubmit={this.setChemical}>\n                    <input \n                        type=\"chemical\" \n                        defaultValue={this.state.chemical} \n                        onChange={e => this.setState({ text: e.target.value })}\n                    />\n                    <input type=\"submit\" />\n                </form>\n\n                <button onClick={this.getRandomChemical}>Random</button>\n\n            </div>\n        );\n    }\n    componentDidMount() {\n        // var image = document.getElementById('imgChemical')\n        // var isLoaded = image.complete && image.naturalHeight !== 0;\n        // console.log('IMG is loaded ? ' + isLoaded)\n        // while(!isLoaded) { \n        //     this.getRandomChemical();\n        // }\n    }\n}\n","import React, { useState } from 'react';\nimport { Chemistry } from './Chemistry';\n// import  Shit from './Playground';\n\n\nconst colorNames = ['Aquamarine', 'BlueViolet', 'Chartreuse', 'CornflowerBlue', 'Thistle', 'SpringGreen', 'SaddleBrown', 'PapayaWhip', 'MistyRose'];\n\nexport default function ColorPicker() {\n  const [color, setColor] = useState('Tomato');\n\n const divStyle = {backgroundColor: color};\n\n  return (\n    <div id='colorPicker' style={divStyle}>\n      <p>Selected color: {color}</p>\n      <Chemistry />\n      {colorNames.map((colorName)=>(\n        <button \n          style={{'backgroundColor': colorName}}\n          onClick={() => setColor(colorName)} \n          key={colorName}>\n       \t     {colorName}\n      \t</button>\n      ))}\n      {/* <Shit /> */}\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport data from './data.json'\n\nexport class Stocks extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          src: `https://logo.clearbit.com/aaa.com`,\n          num: '123',\n          company: '123',\n          symbol: '123',\n          price: '123',\n          marketCap: '123',\n          sector: '123',\n          industry: '123'            \n      };\n\n      this.setRandomNum = this.setRandomNum.bind(this) \n    }\n\n  setRandomNum() { \n      const randomNum = Math.floor(Math.random()*949);\n      let name = data[randomNum]['Company name']\n      let company = name.replace(/\\s/g, ''); // remove spaces\n      company = company.replace('.com',''); // remove .com\n      const abbreviation = data[randomNum].Symbol\n      const price = data[randomNum]['Price (USD)']\n      const marketCap = data[randomNum]['Market cap (In millions)'].split(',')[0]\n      const sector = data[randomNum].Sector\n      const industry = data[randomNum].Industry\n\n      this.setState({ \n        src: `https://logo.clearbit.com/${company}.com`,\n        num: randomNum,\n        company: company,\n        symbol: abbreviation,\n        price: price,\n        marketCap: marketCap,\n        sector: sector,\n        industry: industry   \n      })\n    }\n\n  render() {\n    return (\n      <div id=\"image\">\n          {this.state.num}&nbsp; \n          \n          <a    \n                href={'https://www.google.com/search?q='+this.state.company}\n                target=\"_blank\" >{this.state.company}</a> \n          \n          &nbsp;[ <a    \n                href={'https://www.google.com/search?q='+this.state.symbol}\n                target=\"_blank\" >{this.state.symbol}</a> ] \n          <br />\n          <img onClick={this.setRandomNum} id=\"stockImg\" src={this.state.src} />\n      \n          <div id=\"answerButtons\">\n            <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n            <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n          </div>\n          <br/>Market Cap: {this.state.marketCap} billions\n          <hr />{this.state.sector} | {this.state.industry}\n\n          {/* <br/><br/>[graph here would be really nice] */}\n          <br/><br/> Price: {this.state.price}\n\n          \n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setRandomNum()\n  }\n}\n","import React from 'react';\n\nexport class Buttons extends React.Component {\n  render() {\n    return (\n        <div id=\"answerButtons\">\n          <button onClick={this.setRandomNum} id=\"artButton\" class=\"button button1\">Art</button>\n          <button id=\"notArtButton\" class=\"button button2\">Not Art</button>\n        </div>\n    );\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZAojdFe9lP0jyGAluKHTdCiHM7TPT4RQ\",\n    authDomain: \"dashboard-14d63.firebaseapp.com\",\n    projectId: \"dashboard-14d63\",\n    storageBucket: \"dashboard-14d63.appspot.com\",\n    messagingSenderId: \"634019035569\",\n    appId: \"1:634019035569:web:0fa1509cd4cf9498536590\",\n    measurementId: \"G-SLYCHG806R\"\n  };    \n\n  const app = initializeApp(firebaseConfig);\n  export default getFirestore();","import db from './firebase';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\n\n\nexport class Counter extends React.Component {\n    getTimeRemaining(){\n        const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n        // console.log('NEW DATE IS: ' + new Date());\n        // console.log('Time left lol: ' + total/(1000*60*60*24));\n        const days = Math.floor( total/(1000*60*60*24) );\n        return days\n    }\n\n    checkboxesCrossed() {\n        let checkboxesCrossed = 0;\n        let itemsDone = this.itemsDone();\n            \n        checkboxesCrossed = itemsDone.length;\n\n        return checkboxesCrossed;\n    }\n\n    itemsDone() {\n        let itemsDone = [];\n\n        if(document.getElementById('Obsidian') !== null) {\n            let idk;\n            idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n            idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n            idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n            idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n            idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n            idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n            idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n            idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('SelfInquiry') : null;\n            idk = document.getElementById('MarxCapital').checked ? itemsDone.push('MarxCapital') : null;\n            idk = document.getElementById('Contemplation').checked ? itemsDone.push('MarxCapital') : null;\n        }\n        return itemsDone;\n    }\n\n    async addDayToFirebase() {\n        const day = this.getTimeRemaining();\n        const docRef = doc(db, 'Days', `#${day.toString()}`);\n        let payload;\n\n        payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n    \n        await setDoc(docRef, payload);\n      }\n\n\n    async getItemsDone() {\n        const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        console.log(data.done)\n        return data.done;\n    }\n\n    async get10DayAvg() {\n        let total = 0;\n        for(let i = 0; i < 10; i++) {\n            const docRef = doc(db, 'Days', `#${this.getTimeRemaining() + i }`);\n            const docSnapshot = await getDoc(docRef)\n            const data = docSnapshot.data();\n\n            console.log(`Data ${i}: ` + JSON.stringify(data))\n            if(JSON.stringify(data) !== undefined) {\n                total += data.PM;\n            }\n        }\n        console.log(`Total: ${total}`)\n        document.getElementById('lol').innerHTML = total/10;\n        return '4';\n    }\n\n    copyToClipboard() {\n        navigator.clipboard.writeText('\\n**Day #' + this.getTimeRemaining() + '**\\n\\n\\n---\\n\\n');\n    }\n\n    render() {\n        return (\n            <div> \n                <details onClick={() => { this.get10DayAvg(); this.copyToClipboard() }}>\n                    <summary>Day #<u>{ this.getTimeRemaining()}</u> | PM: {this.checkboxesCrossed()}/10 ▼</summary>\n                    10 day avg: <b id='lol'>calculating...</b>\n                    {/* <button onClick={this.get10DayAvg}>Get 10 day avg</button> */}\n                </details>            \n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // Paste your code here.\n        const oneSecond = 1000;\n        setInterval(() => {\n        this.setState({ date: new Date() });\n        }, oneSecond);\n    }\n}\n","import { collection, onSnapshot, getDoc, setDoc, doc, serverTimestamp, updateDoc } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\nimport moment from 'moment';\n\n\nexport class Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {placeholder: 'Any ideas or To-dos?', text: ' ', dbName: \"ideas\"};\n    this.handleNew = this.handleNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText() {\n    return this.state.placeholder;\n  }\n\n  handleChange(event) {    \n    this.setState({text: event.target.value});\n  }\n  \n  async handleNew() {\n    const dbName = this.state.dbName;\n    const docRef = doc(db, dbName, moment().toString());\n    let payload;\n\n    switch(dbName) {\n      case \"ideas\":\n        payload = {idea: this.state.text, timestamp: serverTimestamp(), hide: 0};\n        await setDoc(docRef, payload);\n        break;\n      case \"toDo\":\n        payload = {toDoItem: this.state.text, done: 0, timestamp: serverTimestamp()};\n        await setDoc(docRef, payload);\n        break;\n      case 'dayNote':\n        this.addDayNote();\n        break;\n    }\n    this.setState({text: ''});\n    this.setState({placeholder: 'Saved! Anything else?'});\n    \n    document.querySelector('#notepad').value = \"\";\n    document.querySelector('#notepad').placeholder = \"Saved! Anything else?\";\n  }\n\n  setDatabaseName(event) {\n    console.log(event.target.value);\n    this.setState({dbName: event.target.value}); \n    this.setState({text: ''}); \n    this.setState({placeholder: `saving to: ${event.target.value}`}); \n\n    // document.querySelector('#notepad').value = \"\";\n  }\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async addDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    let payload;\n\n    payload = {note: this.state.text, timestamp: serverTimestamp()};\n    \n    await updateDoc(docRef, payload);\n  }\n\n  async getDayNote() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    let dayNote = data.note;\n\n    console.log('Day note is: ' + dayNote);\n    dayNote = dayNote === undefined ? '🤔' : dayNote;\n\n    this.setState({placeholder: ''});\n    this.setState({text: dayNote});\n    document.querySelector('#notepad').value = dayNote;\n  }\n\n  render() {\n    return (\n      <div id=\"notepadSection\">\n        <textarea id=\"notepad\" contenteditable=\"true\" autocomplete=\"off\" placeholder={this.getText()} onChange={this.handleChange} /> <br />\n          <div onChange={this.setDatabaseName.bind(this)}>\n            <input type=\"radio\" id=\"idea\" name=\"fav_language\" value=\"ideas\"/>\n            <label for=\"idea\">💡</label>\n\n            <input type=\"radio\" id=\"toDo\" name=\"fav_language\" value=\"toDo\"/>\n            <label for=\"toDo\">✅</label>\n{/* \n            <input type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"starred\"/>\n            <label for=\"starred\">⭐</label> */}\n\n            <input onClick={() => this.getDayNote()} type=\"radio\" id=\"starred\" name=\"fav_language\" value=\"dayNote\"/>\n            <label for=\"starred\">📝</label><br/>\n          </div>\n        <button className=\"button\" onClick={this.handleNew}>Add</button>\n      </div>\n        \n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, where, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nconst toDoList = ['Make auto-toggle', 'Scrape ladirna.cz plants & add to Anki'];\n\nexport default function ToDoList() {\n\n  const [toDos, setTodo] = useState([{ toDoItem: \"Loading...\", done: 0, id: \"initial\" }]);\n  const [done, setDoneTodos] = useState([{ toDoItem: \"Loading...\", done: 1, id: \"initial\" }]);\n\n  const toDosCollectionRef = collection(db, \"toDo\");\n\n  const qTodo = query(toDosCollectionRef, orderBy(\"timestamp\", \"desc\"));\n  const qDone = query(toDosCollectionRef, where(\"done\", \">\", 0), orderBy(\"done\", \"desc\"));\n\n  useEffect(() => \n      onSnapshot(qTodo, (snapshotTodo) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setTodo(snapshotTodo.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  useEffect(() => \n      onSnapshot(qDone, (snapshotDone) =>\n        // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n        // console.log(snapshot.docs.map(doc => doc.data()))\n        setDoneTodos(snapshotDone.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  const setDone = async (id, toDoItem) => {\n    // console.log(id)\n    const docRef = doc(db, \"toDo\", id);\n\n    const payload = {toDoItem: toDoItem, timestampDone: serverTimestamp(), done: 1, hide: 0};\n\n    setDoc(docRef, payload);\n  }\n\n  const hideDoneItem = async (toDoItem) => {\n    console.log(toDoItem.id)\n    const docRef = doc(db, \"toDo\", toDoItem.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='toDoList'>\n      <details open>\n      <summary><h2>✅ <b><u>To-do list:</u></b></h2></summary>\n\n        {\n          toDos.map(item => (\n            // <div><input type=\"checkbox\" onChange={setDone.bind(this)} value={ item.toDoItem }/> { item.toDoItem } </div>\n            <h3><input type=\"checkbox\" onClick={() => setDone(item.id, item.toDoItem)} /> { item.toDoItem } </h3>\n          ))\n        } \n        \n        </details>\n        \n        <br />\n\n      <details>\n        <summary>Done ▼</summary>\n        {\n          done.map(item => (\n            item.hide == 1 ? null : <div><input type=\"checkbox\" checked/> { item.toDoItem } <button onClick={() => hideDoneItem(item)}>×</button> </div>\n          ))\n        }\n      </details> <br />\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport ToDoList from './Todolist';\n\nexport class Motivation extends React.Component {\n\n  render() {\n    return (\n        <div id=\"motivation\">\n                <details>\n                  <summary>Important ▼</summary>\n                  What can I do today to 📈 my self-esteem?\n                  <div style={{'text-align' : 'right'}}>...to be honest</div>\n\n                  <br/>\n                  ⭐ Я люблю себя, хочу для себя лучшего, поэтому...\n                </details> <br />\n\n            <ToDoList />\n        </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport moment from 'moment'\nimport DatabaseAxios from './DatabaseAxios';\nimport axios from \"axios\";\n\n\nexport class EjaculationTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get('http://willthisdofor.art/api/getTime.php').then((response) => {\n      let time = JSON.stringify(response.data)\n      time = time.replace(\"GMT 0100\", \"GMT+0100\")\n      this.setState( {lastTime: time})\n    });\n\n    this.state = { \n      lastTime: \"2021-10-26 10:06\",\n      reload: 'idkz whatever'\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  getTimePassed() {\n    var nowMoment = moment(new Date()); //todays date\n    var last = this.state.lastTime; // another date\n    var d = moment.duration(nowMoment.diff(last));\n\n    let days = d.days();\n    let hours = d.hours();\n    let minutes = d.minutes();\n    let seconds = d.seconds();\n\n    var daysPassed = days > 0 ?  days + ' days ' : '';\n    var hoursPassed = hours > 0 ?  hours + ' hours ' : '';\n    var minutesPassed = minutes > 0 ?  minutes + ' minutes ' : '';\n    var secondsPassed = days + hours + minutes === 0 ?  seconds + ' seconds ' : '';\n\n    const timePassed = daysPassed + hoursPassed + minutesPassed + secondsPassed;\n\n    return timePassed\n  }\n\n  incrementSeconds() {\n    this.setState((prevState, props) => ({\n      time: prevState.time + 1  \n    }))\n  }\n\n  reset() {\n    const newTime = new Date()\n    let feedback;\n    let data = prompt(\"Jerked off or had sex? How was it? Satisfied or Disappointed? Good use of energy?\", '|10');\n    if (data != null) {\n      feedback = data == \"\" ? \"no comment\" : data;\n\n      fetch('http://willthisdofor.art/api/saveTime.php?time=' + newTime +  '&feedback=' + feedback)\n      this.setState( {lastTime: newTime})\n    }\n  }\n\n  render() {\n    return (\n        <div id=\"ejaculationTimer\">\n            Time since last 💦: <br/>\n            <div id=\"timePassed\">{this.getTimePassed()}</div>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n    );\n  }\n  componentDidMount() {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.incrementSeconds()\n\n    }, oneSecond);\n  }\n}\n","import React from 'react';\nimport TSdata from './TS.json';\n\nexport class TS extends React.Component {\n\n    printLesson() {\n        const d = new Date();\n\n        const weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let day = weekday[d.getDay()];\n        const messageToAlert = TSdata[day]\n\n        alert(messageToAlert)\n    }\n\n    printTask() {\n        alert(TSdata['Task'])\n    }\n\n    getWeekNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24*7) );\n        console.log(days)\n        return days\n    }\n    getDayNumber() {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor( total/(1000*60*60*24) % 7 );\n        return days\n    }\n\n  render() {\n    return (\n        <div id=\"TS\">\n            <h3>Week #{this.getWeekNumber()}</h3>\n            <h3>Day {this.getDayNumber()}</h3>\n            <button onClick={ () => this.getWeekNumber() }>Week Task</button>\n            <button onClick={ () => this.printLesson() }>Day Lesson</button>\n        </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\n\nexport default function TranscendingSelf() {\n\n    const [data, setData] = useState([{ lesson: \"Loading...\", id: \"initial\"}]);\n\n    const collectionRef = collection(db, \"Transcending Self\");\n  \n    const q = query(collectionRef);\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n        setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n    []\n    );\n\n    const getWeekNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        const days = Math.floor(1 + (total/(1000*60*60*24*7)) );\n        // console.log('days is: ' + total/1000/60/60/24/7)\n        console.log(days)\n        return days\n    }\n    const getDayNumber = () => {\n        const total = Date.parse(new Date()) - Date.parse('Oct 19, 2021');\n        let days = Math.floor( total/(1000*60*60*24) % 7 );\n        \n        days = days === 0 ? 7 : days;\n        return days\n    }\n    // const parseData = () => {\n    //     const data = JSON.parse(data);\n    //     return data.id\n    // }\n    const printTask = () =>{\n        console.log()\n    }\n\n    const getURL = () => { \n        const URL = \"https://drive.google.com/file/d/0ByAPpaltspWteG1xZi1hU3ljUDg/view?mc_cid=b0ac365ac0&mc_eid=1f0a85948e&resourcekey=0-LNZpCN1MLVqDXwtWEG_5KA\";\n        return URL\n    }\n\n    const getWeekLesson = async () => {\n        // const docRef = doc(db, 'Transcending Self', `Week #${getWeekNumber()}`);\n        const docRef = doc(db, 'Transcending Self', `Week #11`);\n        const docSnapshot = await getDoc(docRef)\n        const data = docSnapshot.data();\n        // const data = await docSnapshot.data();\n        // console.log('data is: ' + JSON.stringify(data))\n        console.log('data is: ' + JSON.stringify(data.Lesson))\n        // setData({lesson: 'idk'})\n        // return data.id;\n        return JSON.stringify(data.Lesson)\n    }\n\n  return (\n    <div id='TranscendingSelf' style={{'border' : '1px solid white'}}>\n        <h3>Week #{getWeekNumber()}: <a href={getURL()} target=\"_blank\"> {data.map(item => (<text>{item.Lesson13}</text> )) }</a> </h3> \n\n        {/* <details>\n            <summary><b><u>Day {getDayNumber()}:</u></b></summary>\n            <h1>{JSON.stringify(data)}</h1>\n            <button onClick={ () => getWeekLesson() }>Console log</button>\n        </details> */}\n\n        {/* {data.map(item => (<h2>{item[`Day #${getDayNumber()}`]}</h2> ))} */}\n        <b>WEEK WORK:</b> <br />\n            A. From time to time, challenge the belief that there is such a thing as a mind, and notice what happens when you do.  <br /><br />\n            B. Consider the statement: the world is held as your thoughts and feelings about it, and those are held to be correct. Open up to the possibility that what is real and occurring may not be what you think and feel it is.\n            <br /><br />\n            C. Main work: Notice that the feedback you get (judgements, assessments, interpretations) from your interactions reinforces where you are coming from. Try to work out and become conscious of this reinforcing cycle as it occurs within your daily experience.  <br /><br />\n\n            D. Special Assignment: Once during the week, find some shit (actual excrement) and\nnotice any repulsion to it. Then concentrate on it until you can create the feeling of\ndesire in relation to the shit. Notice what you go through to do so, and what happens\nwhen you do. Don't try to fit this into any framework or the rest of your week's work, just\ndo it and observe what happens. <br /><br />\n\n            Day Seven: Writing exercise on this week's work <br /><br />\n\n\n            <br /><br />\n\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from './firebase';\n\nexport default function Ideas() {\n\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\", hide: 0 }]);\n\n    const collectionRef = collection(db, \"ideas\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n          setData(snapshot.docs.map(doc => ({...doc.data(), id: doc.id})))\n        ),\n      []\n    );\n\n  const hideIdea = async (idea) => {\n    console.log(idea)\n    const docRef = doc(db, \"ideas\", idea.id);\n    updateDoc(docRef, { hide: 1 });\n  }\n\n  return (\n    <div id='Ideas'>\n      < br />\n      <details open>\n        <summary><b style={{fontSize : '2em'}}>💡<u> ideas:</u></b></summary>\n            {\n            data.map(item => (\n                item.hide == 0 ? <h3>{item.idea} <button onClick={() => hideIdea(item)}>×</button></h3> : null\n            ))\n        }\n      </details>\n\n\n    </div>\n  );\n}\n\n","import { collection, onSnapshot, setDoc, updateDoc, doc, query, orderBy, serverTimestamp, getDoc } from '@firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase';\nimport { TS } from './TS';\nimport TranscendingSelf from './TranscendingSelf';\nimport Ideas from './Ideas';\n\n\nexport class Remember extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {checked: []};\n    // this.handleNew = this.handleNew.bind(this);\n    // this.handleChange = this.handleChange.bind(this); \n  }\n\n\n  getTimeRemaining(){\n    const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n    const days = Math.floor( total/(1000*60*60*24) );\n    return days\n  }\n\n  async getItemsDone() {\n    const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n    const docSnapshot = await getDoc(docRef)\n    const data = docSnapshot.data();\n    console.log('DATA IS: ' + JSON.stringify(data))\n    if (JSON.stringify(data) === undefined) {\n      this.addDayToFirebase();\n    } else {\n    const items = data.done;\n    this.setState({checked: items}); \n    return items;\n    }\n  }\n\n  isDone(item){\n    // const idk = await this.getItemsDone().toString.includes(item) ? 'checked' : ''\n    // const idk = await this.getItemsDone();\n    // console.log(this.state.checked)\n    const done = this.state.checked\n    console.log('DONE is: ' + done)\n    // console.log(lol)\n    // console.log(lol.includes('aa'))\n    // const checked = await done.includes(item) ? 'true' : 'false';\n    // console.log(`wtf why ${item} ` + checked)\n    // console.log(done)\n    return this.state.checked.includes(item)\n  }\n\n  // async wtf(){\n  //   // console.log('this.state.checked is ' + this.state.checked)\n  //   const items = await this.getItemsDone()\n  //   // console.log(items)\n  //   this.setState({checked: items}); \n  // }\n\n  async handleCheck(item){\n    this.setState(prevState => ({\n      checked: [...prevState.checked, item]\n    }))\n    this.updateDayInFirebase()\n  }\n\n  reset(){\n    this.setState({checked: []});\n    this.updateDayInFirebase(); \n  }\n\n    getTimeRemaining(){\n      const total = Date.parse('May 18, 2045') - Date.parse(new Date());\n      const days = Math.floor( total/(1000*60*60*24) );\n      return days\n  }\n\n  checkboxesCrossed() {\n      let checkboxesCrossed = 0;\n      let itemsDone = this.itemsDone();\n\n      checkboxesCrossed = itemsDone.length;\n      \n      return checkboxesCrossed;\n  }\n\n  itemsDone() {\n      let itemsDone = [];\n\n      if(document.getElementById('Obsidian') !== null) {\n          let idk;\n          idk = document.getElementById('Codecademy').checked ? itemsDone.push('Codecademy') : null;\n          idk = document.getElementById('SDS').checked ? itemsDone.push('SDS') : null;\n          idk = document.getElementById('Sport').checked ? itemsDone.push('Sport') : null;\n          idk = document.getElementById('Obsidian').checked ? itemsDone.push('Obsidian') : null;\n          idk = document.getElementById('Read').checked ? itemsDone.push('Read') : null;\n          idk = document.getElementById('Anki').checked ? itemsDone.push('Anki') : null;\n          idk = document.getElementById('Affirmation').checked ? itemsDone.push('Affirmation') : null;\n          idk = document.getElementById('SelfInquiry').checked ? itemsDone.push('Self-Inquiry') : null;\n          idk = document.getElementById('MarxCapital').checked ? itemsDone.push('MarxCapital') : null;\n          idk = document.getElementById('Contemplation').checked ? itemsDone.push('Contemplation') : null;\n      }\n      return itemsDone;\n  }\n\n  async addDayToFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await setDoc(docRef, payload);\n    }\n\n  async updateDayInFirebase() {\n      const day = this.getTimeRemaining();\n      const docRef = doc(db, 'Days', `#${day.toString()}`);\n      console.log('docRef is ' + docRef)\n      let payload;\n\n      payload = {PM: this.checkboxesCrossed(), done: this.itemsDone(), timestamp: serverTimestamp()};\n      \n      await updateDoc(docRef, payload);\n    }\n\n\n  // async getItemsDone() {\n  //     const docRef = doc(db, 'Days', `#${this.getTimeRemaining()}`);\n  //     const docSnapshot = await getDoc(docRef)\n  //     const data = docSnapshot.data();\n  //     console.log(data.done)\n  //     return data.done;\n  // }\n\n\n  render() {\n    return (\n        <div id=\"Remember\">\n          <details open>\n            <summary>◭ 💯%</summary>\n              ⭐ Switch to thoughts in English <br/><br/>\n\n              What can I do today to be satisfied with this day ending? <br/>\n\n              <input id='Codecademy' checked={this.isDone('Codecademy')} type=\"checkbox\" onChange={()=>{this.handleCheck('Codecademy')}} /> <a href='https://www.codecademy.com/learn' target=\"_blank\">Codecademy</a> <br/>\n              <input id='SDS' checked={this.isDone('SDS')} onChange={()=>{this.handleCheck('SDS')}} type=\"checkbox\"  /> SDS <br/>\n              <input id='Sport' checked={this.isDone('Sport')} onChange={()=>{this.handleCheck('Sport')}} type=\"checkbox\"  /> Sport <br/>\n              <input id='Obsidian' checked={this.isDone('Obsidian')} onChange={()=>{this.handleCheck('Obsidian')}} type=\"checkbox\"  /> 10 mins of random Obsidian <br/>\n              <input id='Read' checked={this.isDone('Read')} onChange={()=>{this.handleCheck('Read')}} type=\"checkbox\"  /> Read <br/>\n              <input id='Anki' checked={this.isDone('Anki')} onChange={()=>{this.handleCheck('Anki')}} type=\"checkbox\"  /> Anki <br/>\n              <input id='Affirmation' checked={this.isDone('Affirmation')} onChange={()=>{this.handleCheck('Affirmation')}} type=\"checkbox\"  /> Affirmation  <br/>\n              <input id='SelfInquiry' checked={this.isDone('Self-Inquiry')} onChange={()=>{this.handleCheck('Self-Inquiry')}} type=\"checkbox\"  /> Self-Inquiry  <br/>\n              <input id='MarxCapital' checked={this.isDone('MarxCapital')} onChange={()=>{this.handleCheck('MarxCapital')}} type=\"checkbox\"  /> Marx Capital  <br/>\n              <input id='Contemplation' checked={this.isDone('Contemplation')} onChange={()=>{this.handleCheck('Contemplation')}} type=\"checkbox\"  /> Contemplation <br/>\n              <button onClick={() => {this.reset()}}>reset</button>\n            </details> <br />\n\n\n            <TranscendingSelf />\n            <Ideas />\n        </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getItemsDone();\n    // this.wtf()\n    // setInterval(() => {\n    //   this.wtf() // can I leave this like this for sync or should I just // ok I guess this is necesasry lol\n    //   // this.setState({ date: new Date() }); \n    // }, 1500);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/VisionBoard.426db91a.png\";","import React from 'react';\nimport visionBoard from '../img/VisionBoard.png';\n\n\nexport class VisionBoard extends React.Component {\n  render() {\n    return (\n        <div id=\"VisionBoard\">\n          <a href={visionBoard} target=\"_blank\">\n            <img id=\"VisionBoardImg\" src={visionBoard} alt=\"visionBoard\" />\n          </a>\n        </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class RandomIdea extends React.Component {\n    handleIdea() {\n        const newTime = new Date()\n\n        let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n        if (idea != null && idea != \"\") {   \n          fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n        }\n      }\n\n  render() {\n    return (\n        <div id=\"randomIdea\">\n            <button id=\"randomIdeaButton\" onClick={() => this.handleIdea()}>Random Idea💡</button>\n            <a id=\"ideasFile\" href=\"https://willthisdofor.art/api/RandomIdeas.txt\" target='_blank'>ideas</a>\n        </div>\n    );\n  }\n}\n","import { collection, onSnapshot } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './firebase';\n\nfunction Playground() {\n    const [data, setData] = useState([{ idea: \"Loading...\", id: \"initial\" }]);\n\n    useEffect(\n      () =>\n        onSnapshot(collection(db, \"SDSlog\"), (snapshot) =>\n          // setColors(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n          // console.log(snapshot.docs.map(doc => doc.data()))\n          setData(snapshot.docs.map(doc => doc.data()))\n        ),\n      []\n    );\n\n        return (\n            <div>\n                <h1>IDK</h1>\n                {data.map(item => (\n                    <h1>{item.idea}</h1>\n                ))}\n            </div>\n        )\n    }\n\nexport default Playground;","import React, { useState, useEffect } from 'react';\nimport { collection, onSnapshot, setDoc, getDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport db from '../Sandbox/firebase';\nimport tarot from '../Tarot/tarot.json';\n\n\nexport default function Tarot() {\n\n    const [data, setData] = useState([{ card: \"Loading...\", id: \"initial\" }]);\n\n    const collectionRef = collection(db, \"Tarot\");\n  \n    const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    useEffect(() => \n        onSnapshot(q, (snapshot) =>\n            setData(snapshot.docs.map(doc => doc.data()))\n            ),\n        []\n    );\n\n    const newCard = async () => {\n        const random = Math.floor(Math.random() * tarot.length + 1);\n        console.log('random num is: ' + random);\n\n        const docRef = doc(db, \"Tarot\", random.toString());\n        const cardInfo = await getDoc(docRef);\n\n        const card = cardInfo.data().card;\n        console.log('card is: ' + card)\n        const meaning = cardInfo.data().meaning;\n        console.log('meaning is: ' + meaning)\n\n        document.getElementById('cardImg').src = `https://willthisdofor.art/tarot/pics/${card}.jpg`;\n        document.getElementById('card').innerHTML = card;\n        document.getElementById('meaningTarot').innerHTML = meaning;\n    }\n\n    const editMeaning = () => {\n      var meaning = document.getElementById(\"meaningTarot\");\n      var saveButton = document.getElementById('saveButton');\n      \n      if (meaning.contentEditable == 'false') {\n        meaning.contentEditable = true;\n        meaning.style['text-decoration']='underline';\n        meaning.style.fontWeight = 'normal';\n        saveButton.innerHTML = '💾'\n      } else {\n        meaning.contentEditable = false;\n        meaning.style['text-decoration']='none';\n        meaning.style.fontWeight = 'bold';\n        saveButton.innerHTML = '✏️'\n      }\n    }\n\n    const randomColor = () => {\n        var color = '#';\n        var letters = '0123456789ABCDEF';\n        \n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        console.log(color);\n        // document.body.style.backgroundColor = color;\n        document.getElementById(\"Tarot\").style.backgroundColor = color;\n    }\n\n\n  return (\n    <div id='Tarot'>\n      <h1><u>Tarot</u></h1>\n        <img id='cardImg' onClick={() => newCard()} src='https://willthisdofor.art/tarot/pics/4_Emperor.jpg' alt=\"tarot\" /> <br />\n        {/* <button class='button' onClick={() => newCard()}>new</button> */}\n        <h1 id=\"card\">idk</h1>\n        <details open>\n          <summary>▼</summary> <br />\n          <h2 id=\"meaningTarot\" contenteditable=\"false\">idk</h2> <button id=\"saveButton\" onClick={ () => { editMeaning() }}>✏️</button>\n        </details>\n        <br /><br /><br /><br />\n        <button onClick={() => randomColor()}>Random color</button>\n\n    </div> \n  );\n}\n\n","import React from 'react';\n\nexport class Goals extends React.Component {\n    // handleIdea() {\n    //     const newTime = new Date()\n\n    //     let idea = prompt(\"What idea did this genius brain generate?\", \"oh i'm so flattered, the idea is...\");\n    //     if (idea != null && idea != \"\") {   \n    //       fetch('http://willthisdofor.art/api/saveIdea.php?time=' + newTime +  '&idea=' + idea)\n    //     }\n    //   }\n\n  render() {\n    return (\n        <div style={{'border' : '1px solid white', 'margin-left' : '10px'}} id=\"Goals\">\n            <h1><u>Goals</u></h1>\n\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Learn React & NodeJS</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Ralston's CAP while it's possible...</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Own 1 share of Tesla</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Go to USA 🇺🇸</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Buy <a href=\"http://TheCosmicJoke.com\" target=\"_blank\">TheCosmicJoke.com</a></h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a black belt 🥋</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Get a Ph.D in AI</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Travel the world ✈️</h2><br />\n            <input type=\"checkbox\"></input> <h2 style={{'display': 'inline'}} >Fill my ISI with Xenon</h2><br />\n\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorPicker from './ColorPicker';\nimport { Stocks } from './Stocks';\nimport { Buttons } from './Buttons'\nimport { Chemistry } from './Chemistry';\nimport { Counter } from './Counter';\nimport { Notepad } from './Notepad';\nimport { Motivation } from './Motivation';\nimport Pfive from './Pfive';\nimport Squares from './Squares';\nimport { EjaculationTimer } from './EjaculationTimer';\nimport { TS } from './TS';\nimport { Remember } from './ Remember';\nimport { VisionBoard } from './Vision Board';\nimport { RandomIdea } from './RandomIdea';\nimport  Playground from './Playground';\nimport Ideas from './Ideas';\nimport Tarot from '../Tarot/Tarot';\nimport { Goals } from './Goals';\n\nexport class Sandbox extends React.Component {\n  render() {\n    return (\n      <div id=\"sandbox\">\n        <div class=\"container\">\n          <div class=\"Main\">\n            <ColorPicker />\n          </div>\n          <div class=\"Stocks\">\n            <Stocks />\n            <br />\n          </div>\n          <div class=\"Motivation\">\n            <h1>Remember</h1>\n            <VisionBoard />\n            <Remember />\n          </div>\n          <div class=\"Clock\">\n            <h2>Let's create</h2>\n            <Counter />\n            <Notepad />\n\n            <Motivation />\n            <Goals />\n            {/* <RandomIdea /> */}\n            <h3>Sexual energy is creative energy.</h3>\n            <EjaculationTimer />\n          </div>\n        </div>\n\n        {/* <Buttons /> */}\n\n        <div id=\"test\"></div>\n        <hr />\n\n        {/* <Pfive />\n        <Squares /> */}\n        {/* <Tarot /> */}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/shrek.f3acf6cd.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport shrek from './Sandbox/shrek.png';\n\nexport class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 'swordfish',\n      authorized: false\n    };\n    this.authorize = this.authorize.bind(this);\n  }\n\n  authorize(e) {\n    const password = e.target.querySelector(\n      'input[type=\"password\"]').value;\n    const auth = password == this.state.password;\n    if (!auth) {\n      console.log('Wrong password, Fuck off ')\n      const title = document.querySelector('#title');\n      title.innerHTML = \"This is my swamp, go away\"\n      const image = document.querySelector('.App-logo');\n      // image.src = 'https://image.emojisky.com/815/203815-middle.png'\n      image.src = shrek;\n      e.preventDefault();\n    }\n    this.setState({\n      authorized: auth\n    });\n  }\n\n  removeSpinner() {\n    const element = document.querySelector('.App-logo');\n    element.style.display = 'none';\n    document.title = \"Dashboard\";\n  }\n\n  render() {\n  const login = (\n    <form action=\"#\" onSubmit={this.authorize}>\n      <input \n        type=\"password\" \n        placeholder=\"Password\" />\n      <input type=\"submit\" />\n    </form>\n  )\n  \n    return (\n      <div id=\"authorization\">\n        <h1 id=\"title\">{this.state.authorized ? 'Welcome' : 'Enter the Password'}</h1>\n        {this.state.authorized ? <Sandbox /> : login}\n        {this.state.authorized ? this.removeSpinner() : null }\n\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  render() {\n    return <div><br/>{this.state.date.toLocaleTimeString()}</div>;\n  }\n  componentDidMount() {\n    // Paste your code here.\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, oneSecond);\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport { Contact } from './Contact';\nimport { Sandbox } from './Sandbox/Sandbox';\nimport { Clock } from './Sandbox/Clock';\nimport { Helmet } from 'react-helmet';\nimport { collection, onSnapshot, setDoc, doc, query, orderBy, serverTimestamp } from '@firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport db from './Sandbox/firebase';\nimport moment from 'moment';\nimport Tarot from './Tarot/Tarot';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" />\n        {/* <title>My Title</title> */}\n        {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n      </Helmet>\n\n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <Contact />\n              <Clock />\n            </header>\n            <Tarot />\n          </Route>\n          <Route path=\"/tarot\">\n            <Tarot />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}